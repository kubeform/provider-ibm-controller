/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ConfigEnvironment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ConfigEnvironmentSpec   `json:"spec,omitempty"`
	Status            ConfigEnvironmentStatus `json:"status,omitempty"`
}

type ConfigEnvironmentSpec struct {
	State *ConfigEnvironmentSpecResource `json:"state,omitempty" tf:"-"`

	Resource ConfigEnvironmentSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type ConfigEnvironmentSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Color code to distinguish the environment.
	// +optional
	ColorCode *string `json:"colorCode,omitempty" tf:"color_code"`
	// Creation time of the environment.
	// +optional
	CreatedTime *string `json:"createdTime,omitempty" tf:"created_time"`
	// Environment description
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// Environment Id.
	EnvironmentID *string `json:"environmentID" tf:"environment_id"`
	// GUID of the App Configuration service. Get it from the service instance credentials section of the dashboard.
	Guid *string `json:"guid" tf:"guid"`
	// Environment URL.
	// +optional
	Href *string `json:"href,omitempty" tf:"href"`
	// Environment name.
	Name *string `json:"name" tf:"name"`
	// Tags associated with the environment
	// +optional
	Tags *string `json:"tags,omitempty" tf:"tags"`
	// Last modified time of the environment data.
	// +optional
	UpdatedTime *string `json:"updatedTime,omitempty" tf:"updated_time"`
}

type ConfigEnvironmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ConfigEnvironmentList is a list of ConfigEnvironments
type ConfigEnvironmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ConfigEnvironment CRD objects
	Items []ConfigEnvironment `json:"items,omitempty"`
}
