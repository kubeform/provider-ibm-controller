/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Cdn struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CdnSpec   `json:"spec,omitempty"`
	Status            CdnStatus `json:"status,omitempty"`
}

type CdnSpec struct {
	State *CdnSpecResource `json:"state,omitempty" tf:"-"`

	Resource CdnSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type CdnSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Bucket name
	// +optional
	BucketName *string `json:"bucketName,omitempty" tf:"bucket_name"`
	// query rule info
	// +optional
	CacheKeyQueryRule *string `json:"cacheKeyQueryRule,omitempty" tf:"cache_key_query_rule"`
	// Certificate type
	// +optional
	CertificateType *string `json:"certificateType,omitempty" tf:"certificate_type"`
	// cname info
	// +optional
	Cname *string `json:"cname,omitempty" tf:"cname"`
	// File extension info
	// +optional
	FileExtension *string `json:"fileExtension,omitempty" tf:"file_extension"`
	// Header info
	// +optional
	Header *string `json:"header,omitempty" tf:"header"`
	// Host name
	HostName *string `json:"hostName" tf:"host_name"`
	// HTTP port number
	// +optional
	HttpPort *int64 `json:"httpPort,omitempty" tf:"http_port"`
	// HTTPS port number
	// +optional
	HttpsPort *int64 `json:"httpsPort,omitempty" tf:"https_port"`
	// origin address info
	OriginAddress *string `json:"originAddress" tf:"origin_address"`
	// Origin type info
	// +optional
	OriginType *string `json:"originType,omitempty" tf:"origin_type"`
	// Path details
	// +optional
	Path *string `json:"path,omitempty" tf:"path"`
	// performance configuration info
	// +optional
	PerformanceConfiguration *string `json:"performanceConfiguration,omitempty" tf:"performance_configuration"`
	// Protocol name
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
	// respect headers info
	// +optional
	RespectHeaders *bool `json:"respectHeaders,omitempty" tf:"respect_headers"`
	// Status info of the CDN instance
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// Vendor name
	// +optional
	VendorName *string `json:"vendorName,omitempty" tf:"vendor_name"`
}

type CdnStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// CdnList is a list of Cdns
type CdnList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Cdn CRD objects
	Items []Cdn `json:"items,omitempty"`
}
