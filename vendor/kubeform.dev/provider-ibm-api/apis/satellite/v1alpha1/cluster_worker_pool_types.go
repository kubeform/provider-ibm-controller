/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ClusterWorkerPool struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClusterWorkerPoolSpec   `json:"spec,omitempty"`
	Status            ClusterWorkerPoolStatus `json:"status,omitempty"`
}

type ClusterWorkerPoolSpecZones struct {
	// Zone for the worker pool in a multizone cluster
	ID *string `json:"ID" tf:"id"`
}

type ClusterWorkerPoolSpec struct {
	State *ClusterWorkerPoolSpecResource `json:"state,omitempty" tf:"-"`

	Resource ClusterWorkerPoolSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ClusterWorkerPoolSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The unique name for the new IBM Cloud Satellite cluster
	Cluster *string `json:"cluster" tf:"cluster"`
	// Disk encryption for worker node
	// +optional
	DiskEncryption *bool `json:"diskEncryption,omitempty" tf:"disk_encryption"`
	// +optional
	Entitlement *string `json:"entitlement,omitempty" tf:"entitlement"`
	// The flavor defines the amount of virtual CPU, memory, and disk space that is set up in each worker node
	// +optional
	Flavor *string `json:"flavor,omitempty" tf:"flavor"`
	// Labels that describe a Satellite host
	// +optional
	HostLabels []string `json:"hostLabels,omitempty" tf:"host_labels"`
	// +optional
	Isolation *string `json:"isolation,omitempty" tf:"isolation"`
	// The name for the worker pool
	Name *string `json:"name" tf:"name"`
	// ID of the resource group.
	// +optional
	ResourceGroupID *string `json:"resourceGroupID,omitempty" tf:"resource_group_id"`
	// Specify the desired number of workers per zone in this worker pool
	// +optional
	WorkerCount *int64 `json:"workerCount,omitempty" tf:"worker_count"`
	// Labels on all the workers in the worker pool
	// +optional
	WorkerPoolLabels *map[string]string `json:"workerPoolLabels,omitempty" tf:"worker_pool_labels"`
	// Zone info for worker pool
	// +optional
	Zones []ClusterWorkerPoolSpecZones `json:"zones,omitempty" tf:"zones"`
}

type ClusterWorkerPoolStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ClusterWorkerPoolList is a list of ClusterWorkerPools
type ClusterWorkerPoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ClusterWorkerPool CRD objects
	Items []ClusterWorkerPool `json:"items,omitempty"`
}
