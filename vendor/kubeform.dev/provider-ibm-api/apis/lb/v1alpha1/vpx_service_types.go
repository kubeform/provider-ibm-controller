/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type VpxService struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VpxServiceSpec   `json:"spec,omitempty"`
	Status            VpxServiceStatus `json:"status,omitempty"`
}

type VpxServiceSpec struct {
	State *VpxServiceSpecResource `json:"state,omitempty" tf:"-"`

	Resource VpxServiceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type VpxServiceSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Number of connections limit
	ConnectionLimit *int64 `json:"connectionLimit" tf:"connection_limit"`
	// Destination IP Address
	DestinationIPAddress *string `json:"destinationIPAddress" tf:"destination_ip_address"`
	// Destination Port number
	DestinationPort *int64 `json:"destinationPort" tf:"destination_port"`
	// Health check info
	HealthCheck *string `json:"healthCheck" tf:"health_check"`
	// name
	Name *string `json:"name" tf:"name"`
	// list of tags associated with the resource
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// usip info
	// +optional
	Usip *string `json:"usip,omitempty" tf:"usip"`
	// VIP id
	VipID *string `json:"vipID" tf:"vip_id"`
	// Weight value
	Weight *int64 `json:"weight" tf:"weight"`
}

type VpxServiceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// VpxServiceList is a list of VpxServices
type VpxServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of VpxService CRD objects
	Items []VpxService `json:"items,omitempty"`
}
