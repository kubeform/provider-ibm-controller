// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleGroup) DeepCopyInto(out *AutoscaleGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleGroup.
func (in *AutoscaleGroup) DeepCopy() *AutoscaleGroup {
	if in == nil {
		return nil
	}
	out := new(AutoscaleGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscaleGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleGroupList) DeepCopyInto(out *AutoscaleGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoscaleGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleGroupList.
func (in *AutoscaleGroupList) DeepCopy() *AutoscaleGroupList {
	if in == nil {
		return nil
	}
	out := new(AutoscaleGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscaleGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleGroupSpec) DeepCopyInto(out *AutoscaleGroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutoscaleGroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleGroupSpec.
func (in *AutoscaleGroupSpec) DeepCopy() *AutoscaleGroupSpec {
	if in == nil {
		return nil
	}
	out := new(AutoscaleGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleGroupSpecResource) DeepCopyInto(out *AutoscaleGroupSpecResource) {
	*out = *in
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(int64)
		**out = **in
	}
	if in.HealthCheck != nil {
		in, out := &in.HealthCheck, &out.HealthCheck
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MaximumMemberCount != nil {
		in, out := &in.MaximumMemberCount, &out.MaximumMemberCount
		*out = new(int64)
		**out = **in
	}
	if in.MinimumMemberCount != nil {
		in, out := &in.MinimumMemberCount, &out.MinimumMemberCount
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkVLANIDS != nil {
		in, out := &in.NetworkVLANIDS, &out.NetworkVLANIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int64)
		**out = **in
	}
	if in.RegionalGroup != nil {
		in, out := &in.RegionalGroup, &out.RegionalGroup
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TerminationPolicy != nil {
		in, out := &in.TerminationPolicy, &out.TerminationPolicy
		*out = new(string)
		**out = **in
	}
	if in.VirtualGuestMemberTemplate != nil {
		in, out := &in.VirtualGuestMemberTemplate, &out.VirtualGuestMemberTemplate
		*out = make([]AutoscaleGroupSpecVirtualGuestMemberTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualServerID != nil {
		in, out := &in.VirtualServerID, &out.VirtualServerID
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleGroupSpecResource.
func (in *AutoscaleGroupSpecResource) DeepCopy() *AutoscaleGroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(AutoscaleGroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleGroupSpecVirtualGuestMemberTemplate) DeepCopyInto(out *AutoscaleGroupSpecVirtualGuestMemberTemplate) {
	*out = *in
	if in.BlockStorageIDS != nil {
		in, out := &in.BlockStorageIDS, &out.BlockStorageIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.BulkVms != nil {
		in, out := &in.BulkVms, &out.BulkVms
		*out = make([]AutoscaleGroupSpecVirtualGuestMemberTemplateBulkVms, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(int64)
		**out = **in
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DedicatedAcctHostOnly != nil {
		in, out := &in.DedicatedAcctHostOnly, &out.DedicatedAcctHostOnly
		*out = new(bool)
		**out = **in
	}
	if in.DedicatedHostID != nil {
		in, out := &in.DedicatedHostID, &out.DedicatedHostID
		*out = new(int64)
		**out = **in
	}
	if in.DedicatedHostName != nil {
		in, out := &in.DedicatedHostName, &out.DedicatedHostName
		*out = new(string)
		**out = **in
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Evault != nil {
		in, out := &in.Evault, &out.Evault
		*out = new(int64)
		**out = **in
	}
	if in.FileStorageIDS != nil {
		in, out := &in.FileStorageIDS, &out.FileStorageIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.FlavorKeyName != nil {
		in, out := &in.FlavorKeyName, &out.FlavorKeyName
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HourlyBilling != nil {
		in, out := &in.HourlyBilling, &out.HourlyBilling
		*out = new(bool)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(int64)
		**out = **in
	}
	if in.IpAddressID != nil {
		in, out := &in.IpAddressID, &out.IpAddressID
		*out = new(int64)
		**out = **in
	}
	if in.IpAddressIDPrivate != nil {
		in, out := &in.IpAddressIDPrivate, &out.IpAddressIDPrivate
		*out = new(int64)
		**out = **in
	}
	if in.Ipv4Address != nil {
		in, out := &in.Ipv4Address, &out.Ipv4Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv4AddressPrivate != nil {
		in, out := &in.Ipv4AddressPrivate, &out.Ipv4AddressPrivate
		*out = new(string)
		**out = **in
	}
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressID != nil {
		in, out := &in.Ipv6AddressID, &out.Ipv6AddressID
		*out = new(int64)
		**out = **in
	}
	if in.Ipv6Enabled != nil {
		in, out := &in.Ipv6Enabled, &out.Ipv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Ipv6StaticEnabled != nil {
		in, out := &in.Ipv6StaticEnabled, &out.Ipv6StaticEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LocalDisk != nil {
		in, out := &in.LocalDisk, &out.LocalDisk
		*out = new(bool)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(int64)
		**out = **in
	}
	if in.NetworkSpeed != nil {
		in, out := &in.NetworkSpeed, &out.NetworkSpeed
		*out = new(int64)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.OsReferenceCode != nil {
		in, out := &in.OsReferenceCode, &out.OsReferenceCode
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupID != nil {
		in, out := &in.PlacementGroupID, &out.PlacementGroupID
		*out = new(int64)
		**out = **in
	}
	if in.PlacementGroupName != nil {
		in, out := &in.PlacementGroupName, &out.PlacementGroupName
		*out = new(string)
		**out = **in
	}
	if in.PostInstallScriptURI != nil {
		in, out := &in.PostInstallScriptURI, &out.PostInstallScriptURI
		*out = new(string)
		**out = **in
	}
	if in.PrivateInterfaceID != nil {
		in, out := &in.PrivateInterfaceID, &out.PrivateInterfaceID
		*out = new(int64)
		**out = **in
	}
	if in.PrivateNetworkOnly != nil {
		in, out := &in.PrivateNetworkOnly, &out.PrivateNetworkOnly
		*out = new(bool)
		**out = **in
	}
	if in.PrivateSecurityGroupIDS != nil {
		in, out := &in.PrivateSecurityGroupIDS, &out.PrivateSecurityGroupIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.PrivateSubnet != nil {
		in, out := &in.PrivateSubnet, &out.PrivateSubnet
		*out = new(string)
		**out = **in
	}
	if in.PrivateSubnetID != nil {
		in, out := &in.PrivateSubnetID, &out.PrivateSubnetID
		*out = new(int64)
		**out = **in
	}
	if in.PrivateVLANID != nil {
		in, out := &in.PrivateVLANID, &out.PrivateVLANID
		*out = new(int64)
		**out = **in
	}
	if in.PublicBandwidthLimited != nil {
		in, out := &in.PublicBandwidthLimited, &out.PublicBandwidthLimited
		*out = new(int64)
		**out = **in
	}
	if in.PublicBandwidthUnlimited != nil {
		in, out := &in.PublicBandwidthUnlimited, &out.PublicBandwidthUnlimited
		*out = new(bool)
		**out = **in
	}
	if in.PublicInterfaceID != nil {
		in, out := &in.PublicInterfaceID, &out.PublicInterfaceID
		*out = new(int64)
		**out = **in
	}
	if in.PublicIpv6Subnet != nil {
		in, out := &in.PublicIpv6Subnet, &out.PublicIpv6Subnet
		*out = new(string)
		**out = **in
	}
	if in.PublicIpv6SubnetID != nil {
		in, out := &in.PublicIpv6SubnetID, &out.PublicIpv6SubnetID
		*out = new(int64)
		**out = **in
	}
	if in.PublicSecurityGroupIDS != nil {
		in, out := &in.PublicSecurityGroupIDS, &out.PublicSecurityGroupIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.PublicSubnet != nil {
		in, out := &in.PublicSubnet, &out.PublicSubnet
		*out = new(string)
		**out = **in
	}
	if in.PublicSubnetID != nil {
		in, out := &in.PublicSubnetID, &out.PublicSubnetID
		*out = new(int64)
		**out = **in
	}
	if in.PublicVLANID != nil {
		in, out := &in.PublicVLANID, &out.PublicVLANID
		*out = new(int64)
		**out = **in
	}
	if in.QuoteID != nil {
		in, out := &in.QuoteID, &out.QuoteID
		*out = new(int64)
		**out = **in
	}
	if in.ResourceControllerURL != nil {
		in, out := &in.ResourceControllerURL, &out.ResourceControllerURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
	if in.ResourceStatus != nil {
		in, out := &in.ResourceStatus, &out.ResourceStatus
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPAddresses != nil {
		in, out := &in.SecondaryIPAddresses, &out.SecondaryIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecondaryIPCount != nil {
		in, out := &in.SecondaryIPCount, &out.SecondaryIPCount
		*out = new(int64)
		**out = **in
	}
	if in.SshKeyIDS != nil {
		in, out := &in.SshKeyIDS, &out.SshKeyIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Transient != nil {
		in, out := &in.Transient, &out.Transient
		*out = new(bool)
		**out = **in
	}
	if in.UserMetadata != nil {
		in, out := &in.UserMetadata, &out.UserMetadata
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleGroupSpecVirtualGuestMemberTemplate.
func (in *AutoscaleGroupSpecVirtualGuestMemberTemplate) DeepCopy() *AutoscaleGroupSpecVirtualGuestMemberTemplate {
	if in == nil {
		return nil
	}
	out := new(AutoscaleGroupSpecVirtualGuestMemberTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleGroupSpecVirtualGuestMemberTemplateBulkVms) DeepCopyInto(out *AutoscaleGroupSpecVirtualGuestMemberTemplateBulkVms) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleGroupSpecVirtualGuestMemberTemplateBulkVms.
func (in *AutoscaleGroupSpecVirtualGuestMemberTemplateBulkVms) DeepCopy() *AutoscaleGroupSpecVirtualGuestMemberTemplateBulkVms {
	if in == nil {
		return nil
	}
	out := new(AutoscaleGroupSpecVirtualGuestMemberTemplateBulkVms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscaleGroupStatus) DeepCopyInto(out *AutoscaleGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscaleGroupStatus.
func (in *AutoscaleGroupStatus) DeepCopy() *AutoscaleGroupStatus {
	if in == nil {
		return nil
	}
	out := new(AutoscaleGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalePolicy) DeepCopyInto(out *AutoscalePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalePolicy.
func (in *AutoscalePolicy) DeepCopy() *AutoscalePolicy {
	if in == nil {
		return nil
	}
	out := new(AutoscalePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscalePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalePolicyList) DeepCopyInto(out *AutoscalePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AutoscalePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalePolicyList.
func (in *AutoscalePolicyList) DeepCopy() *AutoscalePolicyList {
	if in == nil {
		return nil
	}
	out := new(AutoscalePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AutoscalePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalePolicySpec) DeepCopyInto(out *AutoscalePolicySpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AutoscalePolicySpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalePolicySpec.
func (in *AutoscalePolicySpec) DeepCopy() *AutoscalePolicySpec {
	if in == nil {
		return nil
	}
	out := new(AutoscalePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalePolicySpecResource) DeepCopyInto(out *AutoscalePolicySpecResource) {
	*out = *in
	if in.Cooldown != nil {
		in, out := &in.Cooldown, &out.Cooldown
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScaleAmount != nil {
		in, out := &in.ScaleAmount, &out.ScaleAmount
		*out = new(int64)
		**out = **in
	}
	if in.ScaleGroupID != nil {
		in, out := &in.ScaleGroupID, &out.ScaleGroupID
		*out = new(int64)
		**out = **in
	}
	if in.ScaleType != nil {
		in, out := &in.ScaleType, &out.ScaleType
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Triggers != nil {
		in, out := &in.Triggers, &out.Triggers
		*out = make([]AutoscalePolicySpecTriggers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalePolicySpecResource.
func (in *AutoscalePolicySpecResource) DeepCopy() *AutoscalePolicySpecResource {
	if in == nil {
		return nil
	}
	out := new(AutoscalePolicySpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalePolicySpecTriggers) DeepCopyInto(out *AutoscalePolicySpecTriggers) {
	*out = *in
	if in.Date != nil {
		in, out := &in.Date, &out.Date
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int64)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Watches != nil {
		in, out := &in.Watches, &out.Watches
		*out = make([]AutoscalePolicySpecTriggersWatches, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalePolicySpecTriggers.
func (in *AutoscalePolicySpecTriggers) DeepCopy() *AutoscalePolicySpecTriggers {
	if in == nil {
		return nil
	}
	out := new(AutoscalePolicySpecTriggers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalePolicySpecTriggersWatches) DeepCopyInto(out *AutoscalePolicySpecTriggersWatches) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(int64)
		**out = **in
	}
	if in.Metric != nil {
		in, out := &in.Metric, &out.Metric
		*out = new(string)
		**out = **in
	}
	if in.Operator != nil {
		in, out := &in.Operator, &out.Operator
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(int64)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalePolicySpecTriggersWatches.
func (in *AutoscalePolicySpecTriggersWatches) DeepCopy() *AutoscalePolicySpecTriggersWatches {
	if in == nil {
		return nil
	}
	out := new(AutoscalePolicySpecTriggersWatches)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutoscalePolicyStatus) DeepCopyInto(out *AutoscalePolicyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutoscalePolicyStatus.
func (in *AutoscalePolicyStatus) DeepCopy() *AutoscalePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(AutoscalePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BareMetal) DeepCopyInto(out *BareMetal) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BareMetal.
func (in *BareMetal) DeepCopy() *BareMetal {
	if in == nil {
		return nil
	}
	out := new(BareMetal)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BareMetal) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BareMetalList) DeepCopyInto(out *BareMetalList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BareMetal, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BareMetalList.
func (in *BareMetalList) DeepCopy() *BareMetalList {
	if in == nil {
		return nil
	}
	out := new(BareMetalList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BareMetalList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BareMetalSpec) DeepCopyInto(out *BareMetalSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(BareMetalSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BareMetalSpec.
func (in *BareMetalSpec) DeepCopy() *BareMetalSpec {
	if in == nil {
		return nil
	}
	out := new(BareMetalSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BareMetalSpecResource) DeepCopyInto(out *BareMetalSpecResource) {
	*out = *in
	if in.BlockStorageIDS != nil {
		in, out := &in.BlockStorageIDS, &out.BlockStorageIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DiskKeyNames != nil {
		in, out := &in.DiskKeyNames, &out.DiskKeyNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.ExtendedHardwareTesting != nil {
		in, out := &in.ExtendedHardwareTesting, &out.ExtendedHardwareTesting
		*out = new(bool)
		**out = **in
	}
	if in.FileStorageIDS != nil {
		in, out := &in.FileStorageIDS, &out.FileStorageIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.FixedConfigPreset != nil {
		in, out := &in.FixedConfigPreset, &out.FixedConfigPreset
		*out = new(string)
		**out = **in
	}
	if in.GlobalIdentifier != nil {
		in, out := &in.GlobalIdentifier, &out.GlobalIdentifier
		*out = new(string)
		**out = **in
	}
	if in.GpuKeyName != nil {
		in, out := &in.GpuKeyName, &out.GpuKeyName
		*out = new(string)
		**out = **in
	}
	if in.GpuSecondaryKeyName != nil {
		in, out := &in.GpuSecondaryKeyName, &out.GpuSecondaryKeyName
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HourlyBilling != nil {
		in, out := &in.HourlyBilling, &out.HourlyBilling
		*out = new(bool)
		**out = **in
	}
	if in.ImageTemplateID != nil {
		in, out := &in.ImageTemplateID, &out.ImageTemplateID
		*out = new(int64)
		**out = **in
	}
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressID != nil {
		in, out := &in.Ipv6AddressID, &out.Ipv6AddressID
		*out = new(int64)
		**out = **in
	}
	if in.Ipv6Enabled != nil {
		in, out := &in.Ipv6Enabled, &out.Ipv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Ipv6StaticEnabled != nil {
		in, out := &in.Ipv6StaticEnabled, &out.Ipv6StaticEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(int64)
		**out = **in
	}
	if in.NetworkSpeed != nil {
		in, out := &in.NetworkSpeed, &out.NetworkSpeed
		*out = new(int64)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.OsKeyName != nil {
		in, out := &in.OsKeyName, &out.OsKeyName
		*out = new(string)
		**out = **in
	}
	if in.OsReferenceCode != nil {
		in, out := &in.OsReferenceCode, &out.OsReferenceCode
		*out = new(string)
		**out = **in
	}
	if in.PackageKeyName != nil {
		in, out := &in.PackageKeyName, &out.PackageKeyName
		*out = new(string)
		**out = **in
	}
	if in.PostInstallScriptURI != nil {
		in, out := &in.PostInstallScriptURI, &out.PostInstallScriptURI
		*out = new(string)
		**out = **in
	}
	if in.PrivateIpv4Address != nil {
		in, out := &in.PrivateIpv4Address, &out.PrivateIpv4Address
		*out = new(string)
		**out = **in
	}
	if in.PrivateIpv4AddressID != nil {
		in, out := &in.PrivateIpv4AddressID, &out.PrivateIpv4AddressID
		*out = new(int64)
		**out = **in
	}
	if in.PrivateNetworkOnly != nil {
		in, out := &in.PrivateNetworkOnly, &out.PrivateNetworkOnly
		*out = new(bool)
		**out = **in
	}
	if in.PrivateSubnet != nil {
		in, out := &in.PrivateSubnet, &out.PrivateSubnet
		*out = new(string)
		**out = **in
	}
	if in.PrivateVLANID != nil {
		in, out := &in.PrivateVLANID, &out.PrivateVLANID
		*out = new(int64)
		**out = **in
	}
	if in.ProcessKeyName != nil {
		in, out := &in.ProcessKeyName, &out.ProcessKeyName
		*out = new(string)
		**out = **in
	}
	if in.PublicBandwidth != nil {
		in, out := &in.PublicBandwidth, &out.PublicBandwidth
		*out = new(int64)
		**out = **in
	}
	if in.PublicIpv4Address != nil {
		in, out := &in.PublicIpv4Address, &out.PublicIpv4Address
		*out = new(string)
		**out = **in
	}
	if in.PublicIpv4AddressID != nil {
		in, out := &in.PublicIpv4AddressID, &out.PublicIpv4AddressID
		*out = new(int64)
		**out = **in
	}
	if in.PublicSubnet != nil {
		in, out := &in.PublicSubnet, &out.PublicSubnet
		*out = new(string)
		**out = **in
	}
	if in.PublicVLANID != nil {
		in, out := &in.PublicVLANID, &out.PublicVLANID
		*out = new(int64)
		**out = **in
	}
	if in.QuoteID != nil {
		in, out := &in.QuoteID, &out.QuoteID
		*out = new(int64)
		**out = **in
	}
	if in.RedundantNetwork != nil {
		in, out := &in.RedundantNetwork, &out.RedundantNetwork
		*out = new(bool)
		**out = **in
	}
	if in.RedundantPowerSupply != nil {
		in, out := &in.RedundantPowerSupply, &out.RedundantPowerSupply
		*out = new(bool)
		**out = **in
	}
	if in.RestrictedNetwork != nil {
		in, out := &in.RestrictedNetwork, &out.RestrictedNetwork
		*out = new(bool)
		**out = **in
	}
	if in.SecondaryIPAddresses != nil {
		in, out := &in.SecondaryIPAddresses, &out.SecondaryIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecondaryIPCount != nil {
		in, out := &in.SecondaryIPCount, &out.SecondaryIPCount
		*out = new(int64)
		**out = **in
	}
	if in.SoftwareGuardExtensions != nil {
		in, out := &in.SoftwareGuardExtensions, &out.SoftwareGuardExtensions
		*out = new(bool)
		**out = **in
	}
	if in.SshKeyIDS != nil {
		in, out := &in.SshKeyIDS, &out.SshKeyIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.StorageGroups != nil {
		in, out := &in.StorageGroups, &out.StorageGroups
		*out = make([]BareMetalSpecStorageGroups, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TcpMonitoring != nil {
		in, out := &in.TcpMonitoring, &out.TcpMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.UnbondedNetwork != nil {
		in, out := &in.UnbondedNetwork, &out.UnbondedNetwork
		*out = new(bool)
		**out = **in
	}
	if in.UserMetadata != nil {
		in, out := &in.UserMetadata, &out.UserMetadata
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BareMetalSpecResource.
func (in *BareMetalSpecResource) DeepCopy() *BareMetalSpecResource {
	if in == nil {
		return nil
	}
	out := new(BareMetalSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BareMetalSpecStorageGroups) DeepCopyInto(out *BareMetalSpecStorageGroups) {
	*out = *in
	if in.ArraySize != nil {
		in, out := &in.ArraySize, &out.ArraySize
		*out = new(int64)
		**out = **in
	}
	if in.ArrayTypeID != nil {
		in, out := &in.ArrayTypeID, &out.ArrayTypeID
		*out = new(int64)
		**out = **in
	}
	if in.HardDrives != nil {
		in, out := &in.HardDrives, &out.HardDrives
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.PartitionTemplateID != nil {
		in, out := &in.PartitionTemplateID, &out.PartitionTemplateID
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BareMetalSpecStorageGroups.
func (in *BareMetalSpecStorageGroups) DeepCopy() *BareMetalSpecStorageGroups {
	if in == nil {
		return nil
	}
	out := new(BareMetalSpecStorageGroups)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BareMetalStatus) DeepCopyInto(out *BareMetalStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BareMetalStatus.
func (in *BareMetalStatus) DeepCopy() *BareMetalStatus {
	if in == nil {
		return nil
	}
	out := new(BareMetalStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedHost) DeepCopyInto(out *DedicatedHost) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedHost.
func (in *DedicatedHost) DeepCopy() *DedicatedHost {
	if in == nil {
		return nil
	}
	out := new(DedicatedHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DedicatedHost) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedHostList) DeepCopyInto(out *DedicatedHostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DedicatedHost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedHostList.
func (in *DedicatedHostList) DeepCopy() *DedicatedHostList {
	if in == nil {
		return nil
	}
	out := new(DedicatedHostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DedicatedHostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedHostSpec) DeepCopyInto(out *DedicatedHostSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(DedicatedHostSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedHostSpec.
func (in *DedicatedHostSpec) DeepCopy() *DedicatedHostSpec {
	if in == nil {
		return nil
	}
	out := new(DedicatedHostSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedHostSpecResource) DeepCopyInto(out *DedicatedHostSpecResource) {
	*out = *in
	if in.CpuCount != nil {
		in, out := &in.CpuCount, &out.CpuCount
		*out = new(int64)
		**out = **in
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DiskCapacity != nil {
		in, out := &in.DiskCapacity, &out.DiskCapacity
		*out = new(int64)
		**out = **in
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HourlyBilling != nil {
		in, out := &in.HourlyBilling, &out.HourlyBilling
		*out = new(bool)
		**out = **in
	}
	if in.MemoryCapacity != nil {
		in, out := &in.MemoryCapacity, &out.MemoryCapacity
		*out = new(int64)
		**out = **in
	}
	if in.RouterHostname != nil {
		in, out := &in.RouterHostname, &out.RouterHostname
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WaitTimeMinutes != nil {
		in, out := &in.WaitTimeMinutes, &out.WaitTimeMinutes
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedHostSpecResource.
func (in *DedicatedHostSpecResource) DeepCopy() *DedicatedHostSpecResource {
	if in == nil {
		return nil
	}
	out := new(DedicatedHostSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedHostStatus) DeepCopyInto(out *DedicatedHostStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedHostStatus.
func (in *DedicatedHostStatus) DeepCopy() *DedicatedHostStatus {
	if in == nil {
		return nil
	}
	out := new(DedicatedHostStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Monitor) DeepCopyInto(out *Monitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Monitor.
func (in *Monitor) DeepCopy() *Monitor {
	if in == nil {
		return nil
	}
	out := new(Monitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Monitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorList) DeepCopyInto(out *MonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Monitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorList.
func (in *MonitorList) DeepCopy() *MonitorList {
	if in == nil {
		return nil
	}
	out := new(MonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorSpec) DeepCopyInto(out *MonitorSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(MonitorSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorSpec.
func (in *MonitorSpec) DeepCopy() *MonitorSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorSpecResource) DeepCopyInto(out *MonitorSpecResource) {
	*out = *in
	if in.GuestID != nil {
		in, out := &in.GuestID, &out.GuestID
		*out = new(int64)
		**out = **in
	}
	if in.IpAddress != nil {
		in, out := &in.IpAddress, &out.IpAddress
		*out = new(string)
		**out = **in
	}
	if in.NotifiedUsers != nil {
		in, out := &in.NotifiedUsers, &out.NotifiedUsers
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.QueryTypeID != nil {
		in, out := &in.QueryTypeID, &out.QueryTypeID
		*out = new(int64)
		**out = **in
	}
	if in.ResponseActionID != nil {
		in, out := &in.ResponseActionID, &out.ResponseActionID
		*out = new(int64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.WaitCycles != nil {
		in, out := &in.WaitCycles, &out.WaitCycles
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorSpecResource.
func (in *MonitorSpecResource) DeepCopy() *MonitorSpecResource {
	if in == nil {
		return nil
	}
	out := new(MonitorSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorStatus) DeepCopyInto(out *MonitorStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorStatus.
func (in *MonitorStatus) DeepCopy() *MonitorStatus {
	if in == nil {
		return nil
	}
	out := new(MonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroup) DeepCopyInto(out *PlacementGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroup.
func (in *PlacementGroup) DeepCopy() *PlacementGroup {
	if in == nil {
		return nil
	}
	out := new(PlacementGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupList) DeepCopyInto(out *PlacementGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PlacementGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupList.
func (in *PlacementGroupList) DeepCopy() *PlacementGroupList {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlacementGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupSpec) DeepCopyInto(out *PlacementGroupSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(PlacementGroupSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupSpec.
func (in *PlacementGroupSpec) DeepCopy() *PlacementGroupSpec {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupSpecResource) DeepCopyInto(out *PlacementGroupSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pod != nil {
		in, out := &in.Pod, &out.Pod
		*out = new(string)
		**out = **in
	}
	if in.Rule != nil {
		in, out := &in.Rule, &out.Rule
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupSpecResource.
func (in *PlacementGroupSpecResource) DeepCopy() *PlacementGroupSpecResource {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementGroupStatus) DeepCopyInto(out *PlacementGroupStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementGroupStatus.
func (in *PlacementGroupStatus) DeepCopy() *PlacementGroupStatus {
	if in == nil {
		return nil
	}
	out := new(PlacementGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningHook) DeepCopyInto(out *ProvisioningHook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningHook.
func (in *ProvisioningHook) DeepCopy() *ProvisioningHook {
	if in == nil {
		return nil
	}
	out := new(ProvisioningHook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProvisioningHook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningHookList) DeepCopyInto(out *ProvisioningHookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProvisioningHook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningHookList.
func (in *ProvisioningHookList) DeepCopy() *ProvisioningHookList {
	if in == nil {
		return nil
	}
	out := new(ProvisioningHookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProvisioningHookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningHookSpec) DeepCopyInto(out *ProvisioningHookSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ProvisioningHookSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningHookSpec.
func (in *ProvisioningHookSpec) DeepCopy() *ProvisioningHookSpec {
	if in == nil {
		return nil
	}
	out := new(ProvisioningHookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningHookSpecResource) DeepCopyInto(out *ProvisioningHookSpecResource) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningHookSpecResource.
func (in *ProvisioningHookSpecResource) DeepCopy() *ProvisioningHookSpecResource {
	if in == nil {
		return nil
	}
	out := new(ProvisioningHookSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProvisioningHookStatus) DeepCopyInto(out *ProvisioningHookStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProvisioningHookStatus.
func (in *ProvisioningHookStatus) DeepCopy() *ProvisioningHookStatus {
	if in == nil {
		return nil
	}
	out := new(ProvisioningHookStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshKey) DeepCopyInto(out *SshKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshKey.
func (in *SshKey) DeepCopy() *SshKey {
	if in == nil {
		return nil
	}
	out := new(SshKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SshKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshKeyList) DeepCopyInto(out *SshKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SshKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshKeyList.
func (in *SshKeyList) DeepCopy() *SshKeyList {
	if in == nil {
		return nil
	}
	out := new(SshKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SshKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshKeySpec) DeepCopyInto(out *SshKeySpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(SshKeySpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshKeySpec.
func (in *SshKeySpec) DeepCopy() *SshKeySpec {
	if in == nil {
		return nil
	}
	out := new(SshKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshKeySpecResource) DeepCopyInto(out *SshKeySpecResource) {
	*out = *in
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = new(string)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshKeySpecResource.
func (in *SshKeySpecResource) DeepCopy() *SshKeySpecResource {
	if in == nil {
		return nil
	}
	out := new(SshKeySpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SshKeyStatus) DeepCopyInto(out *SshKeyStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SshKeyStatus.
func (in *SshKeyStatus) DeepCopy() *SshKeyStatus {
	if in == nil {
		return nil
	}
	out := new(SshKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslCertificate) DeepCopyInto(out *SslCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslCertificate.
func (in *SslCertificate) DeepCopy() *SslCertificate {
	if in == nil {
		return nil
	}
	out := new(SslCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SslCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslCertificateList) DeepCopyInto(out *SslCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SslCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslCertificateList.
func (in *SslCertificateList) DeepCopy() *SslCertificateList {
	if in == nil {
		return nil
	}
	out := new(SslCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SslCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslCertificateSpec) DeepCopyInto(out *SslCertificateSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(SslCertificateSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslCertificateSpec.
func (in *SslCertificateSpec) DeepCopy() *SslCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(SslCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslCertificateSpecResource) DeepCopyInto(out *SslCertificateSpecResource) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.CommonName != nil {
		in, out := &in.CommonName, &out.CommonName
		*out = new(string)
		**out = **in
	}
	if in.CreateDate != nil {
		in, out := &in.CreateDate, &out.CreateDate
		*out = new(string)
		**out = **in
	}
	if in.IntermediateCertificate != nil {
		in, out := &in.IntermediateCertificate, &out.IntermediateCertificate
		*out = new(string)
		**out = **in
	}
	if in.KeySize != nil {
		in, out := &in.KeySize, &out.KeySize
		*out = new(int64)
		**out = **in
	}
	if in.ModifyDate != nil {
		in, out := &in.ModifyDate, &out.ModifyDate
		*out = new(string)
		**out = **in
	}
	if in.OrganizationName != nil {
		in, out := &in.OrganizationName, &out.OrganizationName
		*out = new(string)
		**out = **in
	}
	if in.PrivateKey != nil {
		in, out := &in.PrivateKey, &out.PrivateKey
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ValidityBegin != nil {
		in, out := &in.ValidityBegin, &out.ValidityBegin
		*out = new(string)
		**out = **in
	}
	if in.ValidityDays != nil {
		in, out := &in.ValidityDays, &out.ValidityDays
		*out = new(int64)
		**out = **in
	}
	if in.ValidityEnd != nil {
		in, out := &in.ValidityEnd, &out.ValidityEnd
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslCertificateSpecResource.
func (in *SslCertificateSpecResource) DeepCopy() *SslCertificateSpecResource {
	if in == nil {
		return nil
	}
	out := new(SslCertificateSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SslCertificateStatus) DeepCopyInto(out *SslCertificateStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SslCertificateStatus.
func (in *SslCertificateStatus) DeepCopy() *SslCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(SslCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(UserSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(corev1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpecResource) DeepCopyInto(out *UserSpecResource) {
	*out = *in
	if in.Address1 != nil {
		in, out := &in.Address1, &out.Address1
		*out = new(string)
		**out = **in
	}
	if in.Address2 != nil {
		in, out := &in.Address2, &out.Address2
		*out = new(string)
		**out = **in
	}
	if in.ApiKey != nil {
		in, out := &in.ApiKey, &out.ApiKey
		*out = new(string)
		**out = **in
	}
	if in.City != nil {
		in, out := &in.City, &out.City
		*out = new(string)
		**out = **in
	}
	if in.CompanyName != nil {
		in, out := &in.CompanyName, &out.CompanyName
		*out = new(string)
		**out = **in
	}
	if in.Country != nil {
		in, out := &in.Country, &out.Country
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.HasAPIKey != nil {
		in, out := &in.HasAPIKey, &out.HasAPIKey
		*out = new(bool)
		**out = **in
	}
	if in.IbmID != nil {
		in, out := &in.IbmID, &out.IbmID
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
	if in.Permissions != nil {
		in, out := &in.Permissions, &out.Permissions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Timezone != nil {
		in, out := &in.Timezone, &out.Timezone
		*out = new(string)
		**out = **in
	}
	if in.UserStatus != nil {
		in, out := &in.UserStatus, &out.UserStatus
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpecResource.
func (in *UserSpecResource) DeepCopy() *UserSpecResource {
	if in == nil {
		return nil
	}
	out := new(UserSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmInstance) DeepCopyInto(out *VmInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmInstance.
func (in *VmInstance) DeepCopy() *VmInstance {
	if in == nil {
		return nil
	}
	out := new(VmInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VmInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmInstanceList) DeepCopyInto(out *VmInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VmInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmInstanceList.
func (in *VmInstanceList) DeepCopy() *VmInstanceList {
	if in == nil {
		return nil
	}
	out := new(VmInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VmInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmInstanceSpec) DeepCopyInto(out *VmInstanceSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(VmInstanceSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmInstanceSpec.
func (in *VmInstanceSpec) DeepCopy() *VmInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(VmInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmInstanceSpecBulkVms) DeepCopyInto(out *VmInstanceSpecBulkVms) {
	*out = *in
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmInstanceSpecBulkVms.
func (in *VmInstanceSpecBulkVms) DeepCopy() *VmInstanceSpecBulkVms {
	if in == nil {
		return nil
	}
	out := new(VmInstanceSpecBulkVms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmInstanceSpecResource) DeepCopyInto(out *VmInstanceSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.BlockStorageIDS != nil {
		in, out := &in.BlockStorageIDS, &out.BlockStorageIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.BulkVms != nil {
		in, out := &in.BulkVms, &out.BulkVms
		*out = make([]VmInstanceSpecBulkVms, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(int64)
		**out = **in
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DedicatedAcctHostOnly != nil {
		in, out := &in.DedicatedAcctHostOnly, &out.DedicatedAcctHostOnly
		*out = new(bool)
		**out = **in
	}
	if in.DedicatedHostID != nil {
		in, out := &in.DedicatedHostID, &out.DedicatedHostID
		*out = new(int64)
		**out = **in
	}
	if in.DedicatedHostName != nil {
		in, out := &in.DedicatedHostName, &out.DedicatedHostName
		*out = new(string)
		**out = **in
	}
	if in.Disks != nil {
		in, out := &in.Disks, &out.Disks
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Domain != nil {
		in, out := &in.Domain, &out.Domain
		*out = new(string)
		**out = **in
	}
	if in.Evault != nil {
		in, out := &in.Evault, &out.Evault
		*out = new(int64)
		**out = **in
	}
	if in.FileStorageIDS != nil {
		in, out := &in.FileStorageIDS, &out.FileStorageIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.FlavorKeyName != nil {
		in, out := &in.FlavorKeyName, &out.FlavorKeyName
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.HourlyBilling != nil {
		in, out := &in.HourlyBilling, &out.HourlyBilling
		*out = new(bool)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(int64)
		**out = **in
	}
	if in.IpAddressID != nil {
		in, out := &in.IpAddressID, &out.IpAddressID
		*out = new(int64)
		**out = **in
	}
	if in.IpAddressIDPrivate != nil {
		in, out := &in.IpAddressIDPrivate, &out.IpAddressIDPrivate
		*out = new(int64)
		**out = **in
	}
	if in.Ipv4Address != nil {
		in, out := &in.Ipv4Address, &out.Ipv4Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv4AddressPrivate != nil {
		in, out := &in.Ipv4AddressPrivate, &out.Ipv4AddressPrivate
		*out = new(string)
		**out = **in
	}
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressID != nil {
		in, out := &in.Ipv6AddressID, &out.Ipv6AddressID
		*out = new(int64)
		**out = **in
	}
	if in.Ipv6Enabled != nil {
		in, out := &in.Ipv6Enabled, &out.Ipv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Ipv6StaticEnabled != nil {
		in, out := &in.Ipv6StaticEnabled, &out.Ipv6StaticEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LocalDisk != nil {
		in, out := &in.LocalDisk, &out.LocalDisk
		*out = new(bool)
		**out = **in
	}
	if in.Memory != nil {
		in, out := &in.Memory, &out.Memory
		*out = new(int64)
		**out = **in
	}
	if in.NetworkSpeed != nil {
		in, out := &in.NetworkSpeed, &out.NetworkSpeed
		*out = new(int64)
		**out = **in
	}
	if in.Notes != nil {
		in, out := &in.Notes, &out.Notes
		*out = new(string)
		**out = **in
	}
	if in.OsReferenceCode != nil {
		in, out := &in.OsReferenceCode, &out.OsReferenceCode
		*out = new(string)
		**out = **in
	}
	if in.PlacementGroupID != nil {
		in, out := &in.PlacementGroupID, &out.PlacementGroupID
		*out = new(int64)
		**out = **in
	}
	if in.PlacementGroupName != nil {
		in, out := &in.PlacementGroupName, &out.PlacementGroupName
		*out = new(string)
		**out = **in
	}
	if in.PostInstallScriptURI != nil {
		in, out := &in.PostInstallScriptURI, &out.PostInstallScriptURI
		*out = new(string)
		**out = **in
	}
	if in.PrivateInterfaceID != nil {
		in, out := &in.PrivateInterfaceID, &out.PrivateInterfaceID
		*out = new(int64)
		**out = **in
	}
	if in.PrivateNetworkOnly != nil {
		in, out := &in.PrivateNetworkOnly, &out.PrivateNetworkOnly
		*out = new(bool)
		**out = **in
	}
	if in.PrivateSecurityGroupIDS != nil {
		in, out := &in.PrivateSecurityGroupIDS, &out.PrivateSecurityGroupIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.PrivateSubnet != nil {
		in, out := &in.PrivateSubnet, &out.PrivateSubnet
		*out = new(string)
		**out = **in
	}
	if in.PrivateSubnetID != nil {
		in, out := &in.PrivateSubnetID, &out.PrivateSubnetID
		*out = new(int64)
		**out = **in
	}
	if in.PrivateVLANID != nil {
		in, out := &in.PrivateVLANID, &out.PrivateVLANID
		*out = new(int64)
		**out = **in
	}
	if in.PublicBandwidthLimited != nil {
		in, out := &in.PublicBandwidthLimited, &out.PublicBandwidthLimited
		*out = new(int64)
		**out = **in
	}
	if in.PublicBandwidthUnlimited != nil {
		in, out := &in.PublicBandwidthUnlimited, &out.PublicBandwidthUnlimited
		*out = new(bool)
		**out = **in
	}
	if in.PublicInterfaceID != nil {
		in, out := &in.PublicInterfaceID, &out.PublicInterfaceID
		*out = new(int64)
		**out = **in
	}
	if in.PublicIpv6Subnet != nil {
		in, out := &in.PublicIpv6Subnet, &out.PublicIpv6Subnet
		*out = new(string)
		**out = **in
	}
	if in.PublicIpv6SubnetID != nil {
		in, out := &in.PublicIpv6SubnetID, &out.PublicIpv6SubnetID
		*out = new(int64)
		**out = **in
	}
	if in.PublicSecurityGroupIDS != nil {
		in, out := &in.PublicSecurityGroupIDS, &out.PublicSecurityGroupIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.PublicSubnet != nil {
		in, out := &in.PublicSubnet, &out.PublicSubnet
		*out = new(string)
		**out = **in
	}
	if in.PublicSubnetID != nil {
		in, out := &in.PublicSubnetID, &out.PublicSubnetID
		*out = new(int64)
		**out = **in
	}
	if in.PublicVLANID != nil {
		in, out := &in.PublicVLANID, &out.PublicVLANID
		*out = new(int64)
		**out = **in
	}
	if in.QuoteID != nil {
		in, out := &in.QuoteID, &out.QuoteID
		*out = new(int64)
		**out = **in
	}
	if in.ResourceControllerURL != nil {
		in, out := &in.ResourceControllerURL, &out.ResourceControllerURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
	if in.ResourceStatus != nil {
		in, out := &in.ResourceStatus, &out.ResourceStatus
		*out = new(string)
		**out = **in
	}
	if in.SecondaryIPAddresses != nil {
		in, out := &in.SecondaryIPAddresses, &out.SecondaryIPAddresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SecondaryIPCount != nil {
		in, out := &in.SecondaryIPCount, &out.SecondaryIPCount
		*out = new(int64)
		**out = **in
	}
	if in.SshKeyIDS != nil {
		in, out := &in.SshKeyIDS, &out.SshKeyIDS
		*out = make([]int64, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Transient != nil {
		in, out := &in.Transient, &out.Transient
		*out = new(bool)
		**out = **in
	}
	if in.UserMetadata != nil {
		in, out := &in.UserMetadata, &out.UserMetadata
		*out = new(string)
		**out = **in
	}
	if in.WaitTimeMinutes != nil {
		in, out := &in.WaitTimeMinutes, &out.WaitTimeMinutes
		*out = new(int64)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmInstanceSpecResource.
func (in *VmInstanceSpecResource) DeepCopy() *VmInstanceSpecResource {
	if in == nil {
		return nil
	}
	out := new(VmInstanceSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VmInstanceStatus) DeepCopyInto(out *VmInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VmInstanceStatus.
func (in *VmInstanceStatus) DeepCopy() *VmInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(VmInstanceStatus)
	in.DeepCopyInto(out)
	return out
}
