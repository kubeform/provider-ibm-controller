/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Hpcs struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HpcsSpec   `json:"spec,omitempty"`
	Status            HpcsStatus `json:"status,omitempty"`
}

type HpcsSpecAdmins struct {
	// The administrator signature key
	Key *string `json:"key" tf:"key"`
	// Admin Name
	Name *string `json:"name" tf:"name"`
	// Credential giving access to the administrator signature key
	Token *string `json:"-" sensitive:"true" tf:"token"`
}

type HpcsSpecHsmInfoAdmins struct {
	// Admin Name
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// +optional
	Ski *string `json:"ski,omitempty" tf:"ski"`
}

type HpcsSpecHsmInfo struct {
	// Crypto Unit Administrators
	// +optional
	Admins []HpcsSpecHsmInfoAdmins `json:"admins,omitempty" tf:"admins"`
	// +optional
	CurrentMkStatus *string `json:"currentMkStatus,omitempty" tf:"current_mk_status"`
	// +optional
	CurrentMkvp *string `json:"currentMkvp,omitempty" tf:"current_mkvp"`
	// +optional
	HsmID *string `json:"hsmID,omitempty" tf:"hsm_id"`
	// +optional
	HsmLocation *string `json:"hsmLocation,omitempty" tf:"hsm_location"`
	// +optional
	HsmType *string `json:"hsmType,omitempty" tf:"hsm_type"`
	// +optional
	NewMkStatus *string `json:"newMkStatus,omitempty" tf:"new_mk_status"`
	// +optional
	NewMkvp *string `json:"newMkvp,omitempty" tf:"new_mkvp"`
	// Revocation Threshold Value
	// +optional
	RevocationThreshold *int64 `json:"revocationThreshold,omitempty" tf:"revocation_threshold"`
	// Signature Threshold Value
	// +optional
	SignatureThreshold *int64 `json:"signatureThreshold,omitempty" tf:"signature_threshold"`
}

type HpcsSpec struct {
	State *HpcsSpecResource `json:"state,omitempty" tf:"-"`

	Resource HpcsSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type HpcsSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Crypto Unit Administrators
	Admins []HpcsSpecAdmins `json:"admins" tf:"admins"`
	// The date when the instance was created.
	// +optional
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at"`
	// The subject who created the instance.
	// +optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by"`
	// CRN of HPCS instance
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// Dashboard URL to access resource.
	// +optional
	DashboardURL *string `json:"dashboardURL,omitempty" tf:"dashboard_url"`
	// The date when the instance was deleted.
	// +optional
	DeletedAt *string `json:"deletedAt,omitempty" tf:"deleted_at"`
	// The subject who deleted the instance.
	// +optional
	DeletedBy *string `json:"deletedBy,omitempty" tf:"deleted_by"`
	// The extended metadata as a map associated with the HPCS instance.
	// +optional
	Extensions map[string]string `json:"extensions,omitempty" tf:"extensions"`
	// The number of failover crypto units for your service instance
	// +optional
	FailoverUnits *int64 `json:"failoverUnits,omitempty" tf:"failover_units"`
	// Guid of HPCS instance
	// +optional
	Guid *string `json:"guid,omitempty" tf:"guid"`
	// HSM Configuration
	// +optional
	HsmInfo []HpcsSpecHsmInfo `json:"hsmInfo,omitempty" tf:"hsm_info"`
	// The location where the HPCS instance available
	Location *string `json:"location" tf:"location"`
	// A name for the HPCS instance
	Name *string `json:"name" tf:"name"`
	// The plan type of the HPCS Instance
	Plan *string `json:"plan" tf:"plan"`
	// The relative path to the resource aliases for the instance.
	// +optional
	ResourceAliasesURL *string `json:"resourceAliasesURL,omitempty" tf:"resource_aliases_url"`
	// The relative path to the resource bindings for the instance.
	// +optional
	ResourceBindingsURL *string `json:"resourceBindingsURL,omitempty" tf:"resource_bindings_url"`
	// The resource group id
	// +optional
	ResourceGroupID *string `json:"resourceGroupID,omitempty" tf:"resource_group_id"`
	// The relative path to the resource keys for the instance.
	// +optional
	ResourceKeysURL *string `json:"resourceKeysURL,omitempty" tf:"resource_keys_url"`
	// The date when the instance under reclamation was restored.
	// +optional
	RestoredAt *string `json:"restoredAt,omitempty" tf:"restored_at"`
	// The subject who restored the instance back from reclamation.
	// +optional
	RestoredBy *string `json:"restoredBy,omitempty" tf:"restored_by"`
	// Revocation Threshold Value
	RevocationThreshold *int64 `json:"revocationThreshold" tf:"revocation_threshold"`
	// The date when the instance was scheduled for reclamation.
	// +optional
	ScheduledReclaimAt *string `json:"scheduledReclaimAt,omitempty" tf:"scheduled_reclaim_at"`
	// The subject who initiated the instance reclamation.
	// +optional
	ScheduledReclaimBy *string `json:"scheduledReclaimBy,omitempty" tf:"scheduled_reclaim_by"`
	// The name of the service offering `hs-crypto`
	// +optional
	Service *string `json:"service,omitempty" tf:"service"`
	// Types of the service endpoints. Possible values are `public-and-private`, `private-only`.
	// +optional
	ServiceEndpoints *string `json:"serviceEndpoints,omitempty" tf:"service_endpoints"`
	// URL of signing service
	// +optional
	SignatureServerURL *string `json:"signatureServerURL,omitempty" tf:"signature_server_url"`
	// Signature Threshold Value
	SignatureThreshold *int64 `json:"signatureThreshold" tf:"signature_threshold"`
	// The current state of the instance.
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// Status of HPCS instance
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// The number of operational crypto units for your service instance
	Units *int64 `json:"units" tf:"units"`
	// The date when the instance was last updated.
	// +optional
	UpdateAt *string `json:"updateAt,omitempty" tf:"update_at"`
	// The subject who updated the instance.
	// +optional
	UpdateBy *string `json:"updateBy,omitempty" tf:"update_by"`
}

type HpcsStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// HpcsList is a list of Hpcss
type HpcsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Hpcs CRD objects
	Items []Hpcs `json:"items,omitempty"`
}
