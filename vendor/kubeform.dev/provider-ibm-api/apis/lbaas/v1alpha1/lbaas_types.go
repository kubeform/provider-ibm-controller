/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Lbaas struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LbaasSpec   `json:"spec,omitempty"`
	Status            LbaasStatus `json:"status,omitempty"`
}

type LbaasSpecHealthMonitors struct {
	// +optional
	Interval *int64 `json:"interval,omitempty" tf:"interval"`
	// +optional
	MaxRetries *int64 `json:"maxRetries,omitempty" tf:"max_retries"`
	// +optional
	MonitorID *string `json:"monitorID,omitempty" tf:"monitor_id"`
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// +optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol"`
	// +optional
	Timeout *int64 `json:"timeout,omitempty" tf:"timeout"`
	// +optional
	UrlPath *string `json:"urlPath,omitempty" tf:"url_path"`
}

type LbaasSpecProtocols struct {
	// Backend Protocol port number. Should be in range (1, 65535)
	BackendPort *int64 `json:"backendPort" tf:"backend_port"`
	// Backend protocol, one of 'TCP', 'HTTP', 'HTTPS'.
	BackendProtocol *string `json:"backendProtocol" tf:"backend_protocol"`
	// Frontend Protocol port number. Should be in range (1, 65535)
	FrontendPort *int64 `json:"frontendPort" tf:"frontend_port"`
	// Frontend protocol, one of 'TCP', 'HTTP', 'HTTPS'.
	FrontendProtocol *string `json:"frontendProtocol" tf:"frontend_protocol"`
	// Load balancing algorithm: 'round_robin', 'weighted_round_robin', 'least_connection'
	// +optional
	LoadBalancingMethod *string `json:"loadBalancingMethod,omitempty" tf:"load_balancing_method"`
	// No. of connections the listener can accept. Should be between 1-64000
	// +optional
	MaxConn *int64 `json:"maxConn,omitempty" tf:"max_conn"`
	// The UUID of a load balancer protocol
	// +optional
	ProtocolID *string `json:"protocolID,omitempty" tf:"protocol_id"`
	// Session stickness. Valid values is SOURCE_IP and HTTP_COOKIE
	// +optional
	SessionStickiness *string `json:"sessionStickiness,omitempty" tf:"session_stickiness"`
	// This references to SSL/TLS certificate for a protocol
	// +optional
	TlsCertificateID *int64 `json:"tlsCertificateID,omitempty" tf:"tls_certificate_id"`
}

type LbaasSpec struct {
	State *LbaasSpecResource `json:"state,omitempty" tf:"-"`

	Resource LbaasSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type LbaasSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	Datacenter *string `json:"datacenter,omitempty" tf:"datacenter"`
	// Description of a load balancer.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// +optional
	HealthMonitors []LbaasSpecHealthMonitors `json:"healthMonitors,omitempty" tf:"health_monitors"`
	// The load balancer's name.
	Name *string `json:"name" tf:"name"`
	// Protocols to be assigned to this load balancer.
	// +optional
	Protocols []LbaasSpecProtocols `json:"protocols,omitempty" tf:"protocols"`
	// The URL of the IBM Cloud dashboard that can be used to explore and view details about this instance
	// +optional
	ResourceControllerURL *string `json:"resourceControllerURL,omitempty" tf:"resource_controller_url"`
	// The name of the resource
	// +optional
	ResourceName *string `json:"resourceName,omitempty" tf:"resource_name"`
	// The status of the resource
	// +optional
	ResourceStatus *string `json:"resourceStatus,omitempty" tf:"resource_status"`
	// +optional
	SslCiphers []string `json:"sslCiphers,omitempty" tf:"ssl_ciphers"`
	// The operation status 'ONLINE' or 'OFFLINE' of a load balancer.
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// The subnet where this Load Balancer will be provisioned.
	Subnets []int64 `json:"subnets" tf:"subnets"`
	// Specifies if a load balancer is public or private
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
	// "in public loadbalancer - Public IP address allocation done by system public IP pool or public subnet."
	// +optional
	UseSystemPublicIPPool *bool `json:"useSystemPublicIPPool,omitempty" tf:"use_system_public_ip_pool"`
	// The virtual ip address of this load balancer
	// +optional
	Vip *string `json:"vip,omitempty" tf:"vip"`
	// +optional
	WaitTimeMinutes *int64 `json:"waitTimeMinutes,omitempty" tf:"wait_time_minutes"`
}

type LbaasStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// LbaasList is a list of Lbaass
type LbaasList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Lbaas CRD objects
	Items []Lbaas `json:"items,omitempty"`
}
