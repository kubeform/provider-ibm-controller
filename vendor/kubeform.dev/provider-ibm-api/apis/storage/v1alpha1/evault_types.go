/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Evault struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              EvaultSpec   `json:"spec,omitempty"`
	Status            EvaultStatus `json:"status,omitempty"`
}

type EvaultSpec struct {
	State *EvaultSpecResource `json:"state,omitempty" tf:"-"`

	Resource EvaultSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
}

type EvaultSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Capacity
	Capacity *int64 `json:"capacity" tf:"capacity"`
	// Datacenter name
	Datacenter *string `json:"datacenter" tf:"datacenter"`
	// Hardware instance ID
	// +optional
	HardwareInstanceID *int64 `json:"hardwareInstanceID,omitempty" tf:"hardware_instance_id"`
	// password
	// +optional
	Password *string `json:"-" sensitive:"true" tf:"password"`
	// service resource name
	// +optional
	ServiceResourceName *string `json:"serviceResourceName,omitempty" tf:"service_resource_name"`
	// Tags set for the resource
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// user name
	// +optional
	Username *string `json:"username,omitempty" tf:"username"`
	// Virtual instance ID
	// +optional
	VirtualInstanceID *int64 `json:"virtualInstanceID,omitempty" tf:"virtual_instance_id"`
}

type EvaultStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// EvaultList is a list of Evaults
type EvaultList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Evault CRD objects
	Items []Evault `json:"items,omitempty"`
}
