/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type File struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              FileSpec   `json:"spec,omitempty"`
	Status            FileStatus `json:"status,omitempty"`
}

type FileSpecSnapshotSchedule struct {
	// Day of the week
	// +optional
	DayOfWeek *string `json:"dayOfWeek,omitempty" tf:"day_of_week"`
	// +optional
	Enable *bool `json:"enable,omitempty" tf:"enable"`
	// Time duration in hour
	// +optional
	Hour *int64 `json:"hour,omitempty" tf:"hour"`
	// Time duration in minutes
	// +optional
	Minute *int64 `json:"minute,omitempty" tf:"minute"`
	// Retention count
	RetentionCount *int64 `json:"retentionCount" tf:"retention_count"`
	// schedule type
	ScheduleType *string `json:"scheduleType" tf:"schedule_type"`
}

type FileSpec struct {
	State *FileSpecResource `json:"state,omitempty" tf:"-"`

	Resource FileSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type FileSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Hardaware ID
	// +optional
	AllowedHardwareIDS []int64 `json:"allowedHardwareIDS,omitempty" tf:"allowed_hardware_ids"`
	// Allowed range of IP addresses
	// +optional
	AllowedIPAddresses []string `json:"allowedIPAddresses,omitempty" tf:"allowed_ip_addresses"`
	// Allowed network subnets
	// +optional
	AllowedSubnets []string `json:"allowedSubnets,omitempty" tf:"allowed_subnets"`
	// Virtual guest ID
	// +optional
	AllowedVirtualGuestIDS []int64 `json:"allowedVirtualGuestIDS,omitempty" tf:"allowed_virtual_guest_ids"`
	// Storage capacity
	Capacity *int64 `json:"capacity" tf:"capacity"`
	// Datacenter name
	Datacenter *string `json:"datacenter" tf:"datacenter"`
	// Hostname
	// +optional
	Hostname *string `json:"hostname,omitempty" tf:"hostname"`
	// Hourly based billing type
	// +optional
	HourlyBilling *bool `json:"hourlyBilling,omitempty" tf:"hourly_billing"`
	// iops rate
	Iops *float64 `json:"iops" tf:"iops"`
	// Storage mount point
	// +optional
	Mountpoint *string `json:"mountpoint,omitempty" tf:"mountpoint"`
	// Notes
	// +optional
	Notes *string `json:"notes,omitempty" tf:"notes"`
	// The URL of the IBM Cloud dashboard that can be used to explore and view details about this instance
	// +optional
	ResourceControllerURL *string `json:"resourceControllerURL,omitempty" tf:"resource_controller_url"`
	// The name of the resource
	// +optional
	ResourceName *string `json:"resourceName,omitempty" tf:"resource_name"`
	// The status of the resource
	// +optional
	ResourceStatus *string `json:"resourceStatus,omitempty" tf:"resource_status"`
	// Snapshot capacity
	// +optional
	SnapshotCapacity *int64 `json:"snapshotCapacity,omitempty" tf:"snapshot_capacity"`
	// +optional
	// +kubebuilder:validation:MaxItems=3
	SnapshotSchedule []FileSpecSnapshotSchedule `json:"snapshotSchedule,omitempty" tf:"snapshot_schedule"`
	// Tags set for the storage volume
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// Storage type
	Type *string `json:"type" tf:"type"`
	// Storage volume name
	// +optional
	Volumename *string `json:"volumename,omitempty" tf:"volumename"`
}

type FileStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// FileList is a list of Files
type FileList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of File CRD objects
	Items []File `json:"items,omitempty"`
}
