/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type WafRule struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              WafRuleSpec   `json:"spec,omitempty"`
	Status            WafRuleStatus `json:"status,omitempty"`
}

type WafRuleSpecGroup struct {
	// waf rule group id
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// waf rule group name
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type WafRuleSpec struct {
	State *WafRuleSpecResource `json:"state,omitempty" tf:"-"`

	Resource WafRuleSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type WafRuleSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// CIS WAF Rule allowed modes
	// +optional
	AllowedModes *string `json:"allowedModes,omitempty" tf:"allowed_modes"`
	// CIS Intance CRN
	CisID *string `json:"cisID" tf:"cis_id"`
	// CIS WAF Rule descriptions
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// CIS Domain ID
	DomainID *string `json:"domainID" tf:"domain_id"`
	// CIS WAF Rule group
	// +optional
	Group []WafRuleSpecGroup `json:"group,omitempty" tf:"group"`
	// CIS WAF Rule mode
	Mode *string `json:"mode" tf:"mode"`
	// CIS WAF Rule package id
	PackageID *string `json:"packageID" tf:"package_id"`
	// CIS WAF Rule Priority
	// +optional
	Priority *int64 `json:"priority,omitempty" tf:"priority"`
	// CIS WAF Rule id
	RuleID *string `json:"ruleID" tf:"rule_id"`
}

type WafRuleStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// WafRuleList is a list of WafRules
type WafRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of WafRule CRD objects
	Items []WafRule `json:"items,omitempty"`
}
