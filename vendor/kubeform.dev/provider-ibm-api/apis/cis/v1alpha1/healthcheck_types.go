/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Healthcheck struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              HealthcheckSpec   `json:"spec,omitempty"`
	Status            HealthcheckStatus `json:"status,omitempty"`
}

type HealthcheckSpecHeaders struct {
	Header *string  `json:"header" tf:"header"`
	Values []string `json:"values" tf:"values"`
}

type HealthcheckSpec struct {
	State *HealthcheckSpecResource `json:"state,omitempty" tf:"-"`

	Resource HealthcheckSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type HealthcheckSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// allow_insecure
	// +optional
	AllowInsecure *bool `json:"allowInsecure,omitempty" tf:"allow_insecure"`
	// CIS instance crn
	CisID *string `json:"cisID" tf:"cis_id"`
	// +optional
	CreateOn *string `json:"createOn,omitempty" tf:"create_on"`
	// description
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// expected_body
	// +optional
	ExpectedBody *string `json:"expectedBody,omitempty" tf:"expected_body"`
	// expected_codes
	// +optional
	ExpectedCodes *string `json:"expectedCodes,omitempty" tf:"expected_codes"`
	// follow_redirects
	// +optional
	FollowRedirects *bool `json:"followRedirects,omitempty" tf:"follow_redirects"`
	// +optional
	Headers []HealthcheckSpecHeaders `json:"headers,omitempty" tf:"headers"`
	// interval
	// +optional
	Interval *int64 `json:"interval,omitempty" tf:"interval"`
	// method
	// +optional
	Method *string `json:"method,omitempty" tf:"method"`
	// +optional
	ModifiedOn *string `json:"modifiedOn,omitempty" tf:"modified_on"`
	// GLB Monitor/Health check id
	// +optional
	MonitorID *string `json:"monitorID,omitempty" tf:"monitor_id"`
	// path
	// +optional
	Path *string `json:"path,omitempty" tf:"path"`
	// port number
	// +optional
	Port *int64 `json:"port,omitempty" tf:"port"`
	// retries
	// +optional
	Retries *int64 `json:"retries,omitempty" tf:"retries"`
	// timeout
	// +optional
	Timeout *int64 `json:"timeout,omitempty" tf:"timeout"`
	// type
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type HealthcheckStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// HealthcheckList is a list of Healthchecks
type HealthcheckList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Healthcheck CRD objects
	Items []Healthcheck `json:"items,omitempty"`
}
