/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type OriginPool struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              OriginPoolSpec   `json:"spec,omitempty"`
	Status            OriginPoolStatus `json:"status,omitempty"`
}

type OriginPoolSpecOrigins struct {
	Address *string `json:"address" tf:"address"`
	// +optional
	DisabledAt *string `json:"disabledAt,omitempty" tf:"disabled_at"`
	Enabled    *bool   `json:"enabled" tf:"enabled"`
	// +optional
	FailureReason *string `json:"failureReason,omitempty" tf:"failure_reason"`
	// +optional
	Healthy *bool   `json:"healthy,omitempty" tf:"healthy"`
	Name    *string `json:"name" tf:"name"`
	// +optional
	Weight *float64 `json:"weight,omitempty" tf:"weight"`
}

type OriginPoolSpec struct {
	State *OriginPoolSpecResource `json:"state,omitempty" tf:"-"`

	Resource OriginPoolSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type OriginPoolSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// List of regions
	CheckRegions []string `json:"checkRegions" tf:"check_regions"`
	// CIS instance crn
	CisID *string `json:"cisID" tf:"cis_id"`
	// Creation date info
	// +optional
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on"`
	// Description of the CIS Origin Pool
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// Boolean value set to true if cis origin pool needs to be enabled
	Enabled *bool `json:"enabled" tf:"enabled"`
	// Health info
	// +optional
	Health *string `json:"health,omitempty" tf:"health"`
	// Health status
	// +optional
	Healthy *bool `json:"healthy,omitempty" tf:"healthy"`
	// Minimum number of Origins
	// +optional
	MinimumOrigins *int64 `json:"minimumOrigins,omitempty" tf:"minimum_origins"`
	// Modified date info
	// +optional
	ModifiedOn *string `json:"modifiedOn,omitempty" tf:"modified_on"`
	// Monitor value
	// +optional
	Monitor *string `json:"monitor,omitempty" tf:"monitor"`
	// name
	Name *string `json:"name" tf:"name"`
	// Email address configured to recieve the notifications
	// +optional
	NotificationEmail *string `json:"notificationEmail,omitempty" tf:"notification_email"`
	// Origins info
	Origins []OriginPoolSpecOrigins `json:"origins" tf:"origins"`
	// +optional
	PoolID *string `json:"poolID,omitempty" tf:"pool_id"`
}

type OriginPoolStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// OriginPoolList is a list of OriginPools
type OriginPoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of OriginPool CRD objects
	Items []OriginPool `json:"items,omitempty"`
}
