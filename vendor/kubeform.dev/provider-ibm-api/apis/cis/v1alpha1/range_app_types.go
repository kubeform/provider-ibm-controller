/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type RangeApp struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              RangeAppSpec   `json:"spec,omitempty"`
	Status            RangeAppStatus `json:"status,omitempty"`
}

type RangeAppSpec struct {
	State *RangeAppSpecResource `json:"state,omitempty" tf:"-"`

	Resource RangeAppSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type RangeAppSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Application identifier
	// +optional
	AppID *string `json:"appID,omitempty" tf:"app_id"`
	// CIS Intance CRN
	CisID *string `json:"cisID" tf:"cis_id"`
	// created on date
	// +optional
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on"`
	// Name of the DNS record for this application
	Dns *string `json:"dns" tf:"dns"`
	// Type of the DNS record for this application
	DnsType *string `json:"dnsType" tf:"dns_type"`
	// CIS Domain ID
	DomainID *string `json:"domainID" tf:"domain_id"`
	// Specifies the IP version.
	// +optional
	EdgeIPSConnectivity *string `json:"edgeIPSConnectivity,omitempty" tf:"edge_ips_connectivity"`
	// The type of edge IP configuration.
	// +optional
	EdgeIPSType *string `json:"edgeIPSType,omitempty" tf:"edge_ips_type"`
	// Enables the IP Firewall for this application. Only available for TCP applications.
	// +optional
	IpFirewall *bool `json:"ipFirewall,omitempty" tf:"ip_firewall"`
	// modified on date
	// +optional
	ModifiedOn *string `json:"modifiedOn,omitempty" tf:"modified_on"`
	// IP address and port of the origin for this Range application.
	// +optional
	OriginDirect []string `json:"originDirect,omitempty" tf:"origin_direct"`
	// DNS record pointing to the origin for this Range application.
	// +optional
	OriginDNS *string `json:"originDNS,omitempty" tf:"origin_dns"`
	// Port at the origin that listens to traffic
	// +optional
	OriginPort *int64 `json:"originPort,omitempty" tf:"origin_port"`
	// Defines the protocol and port for this application
	Protocol *string `json:"protocol" tf:"protocol"`
	// Allows for the true client IP to be passed to the service.
	// +optional
	ProxyProtocol *string `json:"proxyProtocol,omitempty" tf:"proxy_protocol"`
	// Configure if and how TLS connections are terminated at the edge.
	// +optional
	Tls *string `json:"tls,omitempty" tf:"tls"`
	// Configure how traffic is handled at the edge.
	// +optional
	TrafficType *string `json:"trafficType,omitempty" tf:"traffic_type"`
}

type RangeAppStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// RangeAppList is a list of RangeApps
type RangeAppList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of RangeApp CRD objects
	Items []RangeApp `json:"items,omitempty"`
}
