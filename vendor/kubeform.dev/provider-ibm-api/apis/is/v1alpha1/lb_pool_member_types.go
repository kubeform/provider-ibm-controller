/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type LbPoolMember struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              LbPoolMemberSpec   `json:"spec,omitempty"`
	Status            LbPoolMemberStatus `json:"status,omitempty"`
}

type LbPoolMemberSpec struct {
	State *LbPoolMemberSpecResource `json:"state,omitempty" tf:"-"`

	Resource LbPoolMemberSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type LbPoolMemberSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// LB Pool member health
	// +optional
	Health *string `json:"health,omitempty" tf:"health"`
	// LB pool member Href value
	// +optional
	Href *string `json:"href,omitempty" tf:"href"`
	// Load balancer ID
	Lb *string `json:"lb" tf:"lb"`
	// Loadblancer Poold ID
	Pool *string `json:"pool" tf:"pool"`
	// Load Balancer Pool port
	Port *int64 `json:"port" tf:"port"`
	// Load balancer Pool member provisioning status
	// +optional
	ProvisioningStatus *string `json:"provisioningStatus,omitempty" tf:"provisioning_status"`
	// The crn of the LB resource
	// +optional
	RelatedCrn *string `json:"relatedCrn,omitempty" tf:"related_crn"`
	// Load balancer pool member target address
	// +optional
	TargetAddress *string `json:"targetAddress,omitempty" tf:"target_address"`
	// Load balancer pool member target id
	// +optional
	TargetID *string `json:"targetID,omitempty" tf:"target_id"`
	// Load balcner pool member weight
	// +optional
	Weight *int64 `json:"weight,omitempty" tf:"weight"`
}

type LbPoolMemberStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// LbPoolMemberList is a list of LbPoolMembers
type LbPoolMemberList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of LbPoolMember CRD objects
	Items []LbPoolMember `json:"items,omitempty"`
}
