/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type InstanceGroupMembership struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceGroupMembershipSpec   `json:"spec,omitempty"`
	Status            InstanceGroupMembershipStatus `json:"status,omitempty"`
}

type InstanceGroupMembershipSpecInstance struct {
	// The CRN for this virtual server instance.
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// The user-defined name for this virtual server instance (and default system hostname).
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// The unique identifier for this virtual server instance.
	// +optional
	VirtualServerInstance *string `json:"virtualServerInstance,omitempty" tf:"virtual_server_instance"`
}

type InstanceGroupMembershipSpecInstanceTemplate struct {
	// The CRN for this instance template.
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// The unique identifier for this instance template.
	// +optional
	InstanceTemplate *string `json:"instanceTemplate,omitempty" tf:"instance_template"`
	// The unique user-defined name for this instance template.
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type InstanceGroupMembershipSpec struct {
	State *InstanceGroupMembershipSpecResource `json:"state,omitempty" tf:"-"`

	Resource InstanceGroupMembershipSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type InstanceGroupMembershipSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The delete flag for this instance group membership. Must be set to true to delete instance group membership.
	// +optional
	ActionDelete *bool `json:"actionDelete,omitempty" tf:"action_delete"`
	// If set to true, when deleting the membership the instance will also be deleted.
	// +optional
	DeleteInstanceOnMembershipDelete *bool `json:"deleteInstanceOnMembershipDelete,omitempty" tf:"delete_instance_on_membership_delete"`
	// +optional
	Instance []InstanceGroupMembershipSpecInstance `json:"instance,omitempty" tf:"instance"`
	// The instance group identifier.
	InstanceGroup *string `json:"instanceGroup" tf:"instance_group"`
	// The unique identifier for this instance group membership.
	InstanceGroupMembership *string `json:"instanceGroupMembership" tf:"instance_group_membership"`
	// +optional
	InstanceTemplate []InstanceGroupMembershipSpecInstanceTemplate `json:"instanceTemplate,omitempty" tf:"instance_template"`
	// The unique identifier for this load balancer pool member.
	// +optional
	LoadBalancerPoolMember *string `json:"loadBalancerPoolMember,omitempty" tf:"load_balancer_pool_member"`
	// The user-defined name for this instance group membership. Names must be unique within the instance group.
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// The status of the instance group membership- `deleting`: Membership is deleting dependent resources- `failed`: Membership was unable to maintain dependent resources- `healthy`: Membership is active and serving in the group- `pending`: Membership is waiting for dependent resources- `unhealthy`: Membership has unhealthy dependent resources.
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
}

type InstanceGroupMembershipStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceGroupMembershipList is a list of InstanceGroupMemberships
type InstanceGroupMembershipList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of InstanceGroupMembership CRD objects
	Items []InstanceGroupMembership `json:"items,omitempty"`
}
