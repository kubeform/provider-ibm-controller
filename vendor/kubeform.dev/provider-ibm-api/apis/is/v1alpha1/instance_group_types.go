/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type InstanceGroup struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceGroupSpec   `json:"spec,omitempty"`
	Status            InstanceGroupStatus `json:"status,omitempty"`
}

type InstanceGroupSpec struct {
	State *InstanceGroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource InstanceGroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type InstanceGroupSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Used by the instance group when scaling up instances to supply the port for the load balancer pool member.
	// +optional
	ApplicationPort *int64 `json:"applicationPort,omitempty" tf:"application_port"`
	// The number of instances in the instance group
	// +optional
	InstanceCount *int64 `json:"instanceCount,omitempty" tf:"instance_count"`
	// instance template ID
	InstanceTemplate *string `json:"instanceTemplate" tf:"instance_template"`
	// number of instances in the intances group
	// +optional
	Instances *int64 `json:"instances,omitempty" tf:"instances"`
	// load balancer ID
	// +optional
	LoadBalancer *string `json:"loadBalancer,omitempty" tf:"load_balancer"`
	// load balancer pool ID
	// +optional
	LoadBalancerPool *string `json:"loadBalancerPool,omitempty" tf:"load_balancer_pool"`
	// list of Managers associated with instancegroup
	// +optional
	Managers []string `json:"managers,omitempty" tf:"managers"`
	// The user-defined name for this instance group
	Name *string `json:"name" tf:"name"`
	// Resource group ID
	// +optional
	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group"`
	// Instance group status - deleting, healthy, scaling, unhealthy
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// list of subnet IDs
	Subnets []string `json:"subnets" tf:"subnets"`
	// List of tags for instance group
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// vpc instance
	// +optional
	Vpc *string `json:"vpc,omitempty" tf:"vpc"`
}

type InstanceGroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceGroupList is a list of InstanceGroups
type InstanceGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of InstanceGroup CRD objects
	Items []InstanceGroup `json:"items,omitempty"`
}
