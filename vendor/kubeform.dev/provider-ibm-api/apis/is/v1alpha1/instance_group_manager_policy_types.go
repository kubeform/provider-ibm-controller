/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type InstanceGroupManagerPolicy struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              InstanceGroupManagerPolicySpec   `json:"spec,omitempty"`
	Status            InstanceGroupManagerPolicyStatus `json:"status,omitempty"`
}

type InstanceGroupManagerPolicySpec struct {
	State *InstanceGroupManagerPolicySpecResource `json:"state,omitempty" tf:"-"`

	Resource InstanceGroupManagerPolicySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type InstanceGroupManagerPolicySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// instance group ID
	InstanceGroup *string `json:"instanceGroup" tf:"instance_group"`
	// Instance group manager ID
	InstanceGroupManager *string `json:"instanceGroupManager" tf:"instance_group_manager"`
	// The type of metric to be evaluated
	MetricType *string `json:"metricType" tf:"metric_type"`
	// The metric value to be evaluated
	MetricValue *int64 `json:"metricValue" tf:"metric_value"`
	// instance group manager policy name
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// The Policy ID
	// +optional
	PolicyID *string `json:"policyID,omitempty" tf:"policy_id"`
	// The type of Policy for the Instance Group
	PolicyType *string `json:"policyType" tf:"policy_type"`
}

type InstanceGroupManagerPolicyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// InstanceGroupManagerPolicyList is a list of InstanceGroupManagerPolicys
type InstanceGroupManagerPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of InstanceGroupManagerPolicy CRD objects
	Items []InstanceGroupManagerPolicy `json:"items,omitempty"`
}
