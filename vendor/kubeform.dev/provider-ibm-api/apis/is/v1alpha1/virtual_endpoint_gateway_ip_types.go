/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type VirtualEndpointGatewayIP struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VirtualEndpointGatewayIPSpec   `json:"spec,omitempty"`
	Status            VirtualEndpointGatewayIPStatus `json:"status,omitempty"`
}

type VirtualEndpointGatewayIPSpecTarget struct {
	// The IPs target id
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// The IPs target name
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// Endpoint gateway resource type
	// +optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type"`
}

type VirtualEndpointGatewayIPSpec struct {
	State *VirtualEndpointGatewayIPSpecResource `json:"state,omitempty" tf:"-"`

	Resource VirtualEndpointGatewayIPSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type VirtualEndpointGatewayIPSpecResource struct {
	Timeouts *base.ResourceTimeout `json:"timeouts,omitempty" tf:"timeouts"`

	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// Endpoint gateway IP address
	// +optional
	Address *string `json:"address,omitempty" tf:"address"`
	// Endpoint gateway IP auto delete
	// +optional
	AutoDelete *bool `json:"autoDelete,omitempty" tf:"auto_delete"`
	// Endpoint gateway IP created date and time
	// +optional
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at"`
	// Endpoint gateway ID
	Gateway *string `json:"gateway" tf:"gateway"`
	// Endpoint gateway IP name
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// Endpoint gateway IP id
	ReservedIP *string `json:"reservedIP" tf:"reserved_ip"`
	// Endpoint gateway IP resource type
	// +optional
	ResourceType *string `json:"resourceType,omitempty" tf:"resource_type"`
	// Endpoint gateway detail
	// +optional
	Target []VirtualEndpointGatewayIPSpecTarget `json:"target,omitempty" tf:"target"`
}

type VirtualEndpointGatewayIPStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// VirtualEndpointGatewayIPList is a list of VirtualEndpointGatewayIPs
type VirtualEndpointGatewayIPList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of VirtualEndpointGatewayIP CRD objects
	Items []VirtualEndpointGatewayIP `json:"items,omitempty"`
}
