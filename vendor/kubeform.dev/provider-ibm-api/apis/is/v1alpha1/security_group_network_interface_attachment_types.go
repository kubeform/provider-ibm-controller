/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type SecurityGroupNetworkInterfaceAttachment struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SecurityGroupNetworkInterfaceAttachmentSpec   `json:"spec,omitempty"`
	Status            SecurityGroupNetworkInterfaceAttachmentStatus `json:"status,omitempty"`
}

type SecurityGroupNetworkInterfaceAttachmentSpecFloatingIPS struct {
	// security group network interface attachment floating IP CRN
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// security group network interface attachment floating IP ID
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// security group network interface attachment floating IP name
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type SecurityGroupNetworkInterfaceAttachmentSpecSecurityGroups struct {
	// security group network interface attachment security group CRN
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// security group network interface attachment security group ID
	// +optional
	ID *string `json:"ID,omitempty" tf:"id"`
	// security group network interface attachment security group name
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
}

type SecurityGroupNetworkInterfaceAttachmentSpec struct {
	State *SecurityGroupNetworkInterfaceAttachmentSpecResource `json:"state,omitempty" tf:"-"`

	Resource SecurityGroupNetworkInterfaceAttachmentSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type SecurityGroupNetworkInterfaceAttachmentSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// +optional
	FloatingIPS []SecurityGroupNetworkInterfaceAttachmentSpecFloatingIPS `json:"floatingIPS,omitempty" tf:"floating_ips"`
	// security group network interface attachment network interface ID
	// +optional
	InstanceNetworkInterface *string `json:"instanceNetworkInterface,omitempty" tf:"instance_network_interface"`
	// security group network interface attachment name
	// +optional
	Name *string `json:"name,omitempty" tf:"name"`
	// security group network interface attachment NIC ID
	NetworkInterface *string `json:"networkInterface" tf:"network_interface"`
	// security group network interface attachment port speed
	// +optional
	PortSpeed *int64 `json:"portSpeed,omitempty" tf:"port_speed"`
	// security group network interface attachment Primary IPV4 address
	// +optional
	PrimaryIpv4Address *string `json:"primaryIpv4Address,omitempty" tf:"primary_ipv4_address"`
	// The crn of the Security Group
	// +optional
	RelatedCrn *string `json:"relatedCrn,omitempty" tf:"related_crn"`
	// security group network interface attachment secondary address
	// +optional
	SecondaryAddress []string `json:"secondaryAddress,omitempty" tf:"secondary_address"`
	// security group network interface attachment group ID
	SecurityGroup *string `json:"securityGroup" tf:"security_group"`
	// +optional
	SecurityGroups []SecurityGroupNetworkInterfaceAttachmentSpecSecurityGroups `json:"securityGroups,omitempty" tf:"security_groups"`
	// security group network interface attachment status
	// +optional
	Status *string `json:"status,omitempty" tf:"status"`
	// security group network interface attachment subnet
	// +optional
	Subnet *string `json:"subnet,omitempty" tf:"subnet"`
	// security group network interface attachment type
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
}

type SecurityGroupNetworkInterfaceAttachmentStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SecurityGroupNetworkInterfaceAttachmentList is a list of SecurityGroupNetworkInterfaceAttachments
type SecurityGroupNetworkInterfaceAttachmentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of SecurityGroupNetworkInterfaceAttachment CRD objects
	Items []SecurityGroupNetworkInterfaceAttachment `json:"items,omitempty"`
}
