/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ApiKey struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ApiKeySpec   `json:"spec,omitempty"`
	Status            ApiKeyStatus `json:"status,omitempty"`
}

type ApiKeySpec struct {
	State *ApiKeySpecResource `json:"state,omitempty" tf:"-"`

	Resource ApiKeySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ApiKeySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The account ID of the API key.
	// +optional
	AccountID *string `json:"accountID,omitempty" tf:"account_id"`
	// You can optionally passthrough the API key value for this API key. If passed, NO validation of that apiKey value is done, i.e. the value can be non-URL safe. If omitted, the API key management will create an URL safe opaque API key value. The value of the API key is checked for uniqueness. Please ensure enough variations when passing in this value.
	// +optional
	Apikey *string `json:"-" sensitive:"true" tf:"apikey"`
	// Unique identifier of this API Key.
	// +optional
	ApikeyID *string `json:"apikeyID,omitempty" tf:"apikey_id"`
	// If set contains a date time string of the creation date in ISO format.
	// +optional
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at"`
	// IAM ID of the user or service which created the API key.
	// +optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by"`
	// Cloud Resource Name of the item. Example Cloud Resource Name: 'crn:v1:bluemix:public:iam-identity:us-south:a/myaccount::apikey:1234-9012-5678'.
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// The optional description of the API key. The 'description' property is only available if a description was provided during a create of an API key.
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// Indicates if the API key is locked for further write operations. False by default.
	// +optional
	EntityLock *string `json:"entityLock,omitempty" tf:"entity_lock"`
	// Version of the API Key details object. You need to specify this value when updating the API key to avoid stale updates.
	// +optional
	EntityTag *string `json:"entityTag,omitempty" tf:"entity_tag"`
	// File where api key is to be stored
	// +optional
	File *string `json:"file,omitempty" tf:"file"`
	// The iam_id that this API key authenticates.
	// +optional
	IamID *string `json:"iamID,omitempty" tf:"iam_id"`
	// The API key cannot be changed if set to true.
	// +optional
	Locked *bool `json:"locked,omitempty" tf:"locked"`
	// If set contains a date time string of the last modification date in ISO format.
	// +optional
	ModifiedAt *string `json:"modifiedAt,omitempty" tf:"modified_at"`
	// Name of the API key. The name is not checked for uniqueness. Therefore multiple names with the same value can exist. Access is done via the UUID of the API key.
	Name *string `json:"name" tf:"name"`
	// Send true or false to set whether the API key value is retrievable in the future by using the Get details of an API key request. If you create an API key for a user, you must specify `false` or omit the value. We don't allow storing of API keys for users.
	// +optional
	StoreValue *bool `json:"storeValue,omitempty" tf:"store_value"`
}

type ApiKeyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ApiKeyList is a list of ApiKeys
type ApiKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ApiKey CRD objects
	Items []ApiKey `json:"items,omitempty"`
}
