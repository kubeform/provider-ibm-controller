/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ServiceAPIKey struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ServiceAPIKeySpec   `json:"spec,omitempty"`
	Status            ServiceAPIKeyStatus `json:"status,omitempty"`
}

type ServiceAPIKeySpec struct {
	State *ServiceAPIKeySpecResource `json:"state,omitempty" tf:"-"`

	Resource ServiceAPIKeySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	SecretRef *core.LocalObjectReference `json:"secretRef,omitempty" tf:"-"`
}

type ServiceAPIKeySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The account ID of the API key
	// +optional
	AccountID *string `json:"accountID,omitempty" tf:"account_id"`
	// API key value for this API key
	// +optional
	Apikey *string `json:"-" sensitive:"true" tf:"apikey"`
	// The date and time Service API Key was created
	// +optional
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at"`
	// IAM ID of the service which created the API key
	// +optional
	CreatedBy *string `json:"createdBy,omitempty" tf:"created_by"`
	// crn of the Service API Key
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	//  description of the API key
	// +optional
	Description *string `json:"description,omitempty" tf:"description"`
	// Version of the API Key details object
	// +optional
	EntityTag *string `json:"entityTag,omitempty" tf:"entity_tag"`
	// File where api key is to be stored
	// +optional
	File *string `json:"file,omitempty" tf:"file"`
	// The service iam_id that this API key authenticates
	IamServiceID *string `json:"iamServiceID" tf:"iam_service_id"`
	// The API key cannot be changed if set to true
	// +optional
	Locked *bool `json:"locked,omitempty" tf:"locked"`
	// The date and time Service API Key was modified
	// +optional
	ModifiedAt *string `json:"modifiedAt,omitempty" tf:"modified_at"`
	// Name of the Service API key
	Name *string `json:"name" tf:"name"`
	// Boolean value deciding whether API key value is retrievable in the future
	// +optional
	StoreValue *bool `json:"storeValue,omitempty" tf:"store_value"`
}

type ServiceAPIKeyStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ServiceAPIKeyList is a list of ServiceAPIKeys
type ServiceAPIKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ServiceAPIKey CRD objects
	Items []ServiceAPIKey `json:"items,omitempty"`
}
