/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type ProviderGateway struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProviderGatewaySpec   `json:"spec,omitempty"`
	Status            ProviderGatewayStatus `json:"status,omitempty"`
}

type ProviderGatewaySpec struct {
	State *ProviderGatewaySpecResource `json:"state,omitempty" tf:"-"`

	Resource ProviderGatewaySpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type ProviderGatewaySpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// BGP ASN
	BgpAsn *int64 `json:"bgpAsn" tf:"bgp_asn"`
	// BGP customer edge router CIDR
	// +optional
	BgpCerCIDR *string `json:"bgpCerCIDR,omitempty" tf:"bgp_cer_cidr"`
	// BGP IBM CIDR
	// +optional
	BgpIbmCIDR *string `json:"bgpIbmCIDR,omitempty" tf:"bgp_ibm_cidr"`
	// The date and time resource was created
	// +optional
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at"`
	// The CRN (Cloud Resource Name) of this gateway
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// Customer IBM Cloud account ID for the new gateway. A gateway object containing the pending create request will become available in the specified account.
	CustomerAccountID *string `json:"customerAccountID" tf:"customer_account_id"`
	// The unique user-defined name for this gateway
	Name *string `json:"name" tf:"name"`
	// Gateway operational status
	// +optional
	OperationalStatus *string `json:"operationalStatus,omitempty" tf:"operational_status"`
	// Gateway port
	Port *string `json:"port" tf:"port"`
	// Indicates whether gateway was created through a provider portal
	// +optional
	ProviderAPIManaged *bool `json:"providerAPIManaged,omitempty" tf:"provider_api_managed"`
	// The URL of the IBM Cloud dashboard that can be used to explore and view details about this instance
	// +optional
	ResourceControllerURL *string `json:"resourceControllerURL,omitempty" tf:"resource_controller_url"`
	// The crn of the resource
	// +optional
	ResourceCrn *string `json:"resourceCrn,omitempty" tf:"resource_crn"`
	// The resource group name in which resource is provisioned
	// +optional
	ResourceGroupName *string `json:"resourceGroupName,omitempty" tf:"resource_group_name"`
	// The name of the resource
	// +optional
	ResourceName *string `json:"resourceName,omitempty" tf:"resource_name"`
	// The status of the resource
	// +optional
	ResourceStatus *string `json:"resourceStatus,omitempty" tf:"resource_status"`
	// Gateway speed in megabits per second
	SpeedMbps *int64 `json:"speedMbps" tf:"speed_mbps"`
	// Tags for the direct link gateway
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// Gateway type
	// +optional
	Type *string `json:"type,omitempty" tf:"type"`
	// VLAN allocated for this gateway
	// +optional
	Vlan *int64 `json:"vlan,omitempty" tf:"vlan"`
}

type ProviderGatewayStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// ProviderGatewayList is a list of ProviderGateways
type ProviderGatewayList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of ProviderGateway CRD objects
	Items []ProviderGateway `json:"items,omitempty"`
}
