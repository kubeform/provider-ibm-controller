/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Namespace struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              NamespaceSpec   `json:"spec,omitempty"`
	Status            NamespaceStatus `json:"status,omitempty"`
}

type NamespaceSpec struct {
	State *NamespaceSpecResource `json:"state,omitempty" tf:"-"`

	Resource NamespaceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type NamespaceSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The IBM Cloud account that owns the namespace.
	// +optional
	Account *string `json:"account,omitempty" tf:"account"`
	// When the namespace was created.
	// +optional
	CreatedDate *string `json:"createdDate,omitempty" tf:"created_date"`
	// When the namespace was created.
	// +optional
	// Deprecated
	CreatedOn *string `json:"createdOn,omitempty" tf:"created_on"`
	// If the namespace has been assigned to a resource group, this is the IBM Cloud CRN representing the namespace.
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// The name of the namespace.
	Name *string `json:"name" tf:"name"`
	// When the namespace was assigned to a resource group.
	// +optional
	ResourceCreatedDate *string `json:"resourceCreatedDate,omitempty" tf:"resource_created_date"`
	// The ID of the resource group that the namespace will be created within.
	// +optional
	ResourceGroupID *string `json:"resourceGroupID,omitempty" tf:"resource_group_id"`
	// List of tags
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// When the namespace was last updated.
	// +optional
	UpdatedDate *string `json:"updatedDate,omitempty" tf:"updated_date"`
	// When the namespace was last updated.
	// +optional
	// Deprecated
	UpdatedOn *string `json:"updatedOn,omitempty" tf:"updated_on"`
}

type NamespaceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// NamespaceList is a list of Namespaces
type NamespaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Namespace CRD objects
	Items []Namespace `json:"items,omitempty"`
}
