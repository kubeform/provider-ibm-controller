/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Space struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              SpaceSpec   `json:"spec,omitempty"`
	Status            SpaceStatus `json:"status,omitempty"`
}

type SpaceSpec struct {
	State *SpaceSpecResource `json:"state,omitempty" tf:"-"`

	Resource SpaceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type SpaceSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The IBMID of the users who will have auditor role in this space, ex - user@example.com
	// +optional
	Auditors []string `json:"auditors,omitempty" tf:"auditors"`
	// The IBMID of the users who will have developer role in this space, ex - user@example.com
	// +optional
	Developers []string `json:"developers,omitempty" tf:"developers"`
	// The IBMID of the users who will have manager role in this space, ex - user@example.com
	// +optional
	Managers []string `json:"managers,omitempty" tf:"managers"`
	// The name for the space
	Name *string `json:"name" tf:"name"`
	// The org this space belongs to
	Org *string `json:"org" tf:"org"`
	// The name of the Space Quota Definition
	// +optional
	SpaceQuota *string `json:"spaceQuota,omitempty" tf:"space_quota"`
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
}

type SpaceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// SpaceList is a list of Spaces
type SpaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Space CRD objects
	Items []Space `json:"items,omitempty"`
}
