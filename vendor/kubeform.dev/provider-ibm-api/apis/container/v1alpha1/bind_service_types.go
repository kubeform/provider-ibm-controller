/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type BindService struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              BindServiceSpec   `json:"spec,omitempty"`
	Status            BindServiceStatus `json:"status,omitempty"`
}

type BindServiceSpec struct {
	State *BindServiceSpecResource `json:"state,omitempty" tf:"-"`

	Resource BindServiceSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`
}

type BindServiceSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The bluemix account guid this cluster belongs to
	// +optional
	// Deprecated
	AccountGuid *string `json:"accountGuid,omitempty" tf:"account_guid"`
	// Cluster name or ID
	ClusterNameID *string `json:"clusterNameID" tf:"cluster_name_id"`
	// Key info
	// +optional
	Key *string `json:"key,omitempty" tf:"key"`
	// namespace ID
	NamespaceID *string `json:"namespaceID" tf:"namespace_id"`
	// The bluemix organization guid this cluster belongs to
	// +optional
	// Deprecated
	OrgGuid *string `json:"orgGuid,omitempty" tf:"org_guid"`
	// The cluster region
	// +optional
	// Deprecated
	Region *string `json:"region,omitempty" tf:"region"`
	// ID of the resource group.
	// +optional
	ResourceGroupID *string `json:"resourceGroupID,omitempty" tf:"resource_group_id"`
	// Role info
	// +optional
	Role *string `json:"role,omitempty" tf:"role"`
	// Service instance ID
	// +optional
	ServiceInstanceID *string `json:"serviceInstanceID,omitempty" tf:"service_instance_id"`
	// serivice instance name
	// +optional
	ServiceInstanceName *string `json:"serviceInstanceName,omitempty" tf:"service_instance_name"`
	// The bluemix space guid this cluster belongs to
	// +optional
	// Deprecated
	SpaceGuid *string `json:"spaceGuid,omitempty" tf:"space_guid"`
	// List of tags for the resource
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
}

type BindServiceStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// BindServiceList is a list of BindServices
type BindServiceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of BindService CRD objects
	Items []BindService `json:"items,omitempty"`
}
