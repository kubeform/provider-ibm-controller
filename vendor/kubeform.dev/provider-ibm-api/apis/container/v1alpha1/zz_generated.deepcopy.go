//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	apiv1alpha1 "kubeform.dev/apimachinery/api/v1alpha1"

	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apiv1 "kmodules.xyz/client-go/api/v1"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Addons) DeepCopyInto(out *Addons) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Addons.
func (in *Addons) DeepCopy() *Addons {
	if in == nil {
		return nil
	}
	out := new(Addons)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Addons) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsList) DeepCopyInto(out *AddonsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Addons, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsList.
func (in *AddonsList) DeepCopy() *AddonsList {
	if in == nil {
		return nil
	}
	out := new(AddonsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AddonsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsSpec) DeepCopyInto(out *AddonsSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AddonsSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsSpec.
func (in *AddonsSpec) DeepCopy() *AddonsSpec {
	if in == nil {
		return nil
	}
	out := new(AddonsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsSpecAddons) DeepCopyInto(out *AddonsSpecAddons) {
	*out = *in
	if in.AllowedUpgradeVersions != nil {
		in, out := &in.AllowedUpgradeVersions, &out.AllowedUpgradeVersions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Deprecated != nil {
		in, out := &in.Deprecated, &out.Deprecated
		*out = new(bool)
		**out = **in
	}
	if in.HealthState != nil {
		in, out := &in.HealthState, &out.HealthState
		*out = new(string)
		**out = **in
	}
	if in.HealthStatus != nil {
		in, out := &in.HealthStatus, &out.HealthStatus
		*out = new(string)
		**out = **in
	}
	if in.MinKubeVersion != nil {
		in, out := &in.MinKubeVersion, &out.MinKubeVersion
		*out = new(string)
		**out = **in
	}
	if in.MinOcpVersion != nil {
		in, out := &in.MinOcpVersion, &out.MinOcpVersion
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SupportedKubeRange != nil {
		in, out := &in.SupportedKubeRange, &out.SupportedKubeRange
		*out = new(string)
		**out = **in
	}
	if in.TargetVersion != nil {
		in, out := &in.TargetVersion, &out.TargetVersion
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.VlanSpanningRequired != nil {
		in, out := &in.VlanSpanningRequired, &out.VlanSpanningRequired
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsSpecAddons.
func (in *AddonsSpecAddons) DeepCopy() *AddonsSpecAddons {
	if in == nil {
		return nil
	}
	out := new(AddonsSpecAddons)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsSpecResource) DeepCopyInto(out *AddonsSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Addons != nil {
		in, out := &in.Addons, &out.Addons
		*out = make([]AddonsSpecAddons, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsSpecResource.
func (in *AddonsSpecResource) DeepCopy() *AddonsSpecResource {
	if in == nil {
		return nil
	}
	out := new(AddonsSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AddonsStatus) DeepCopyInto(out *AddonsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AddonsStatus.
func (in *AddonsStatus) DeepCopy() *AddonsStatus {
	if in == nil {
		return nil
	}
	out := new(AddonsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Alb) DeepCopyInto(out *Alb) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Alb.
func (in *Alb) DeepCopy() *Alb {
	if in == nil {
		return nil
	}
	out := new(Alb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Alb) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbCert) DeepCopyInto(out *AlbCert) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbCert.
func (in *AlbCert) DeepCopy() *AlbCert {
	if in == nil {
		return nil
	}
	out := new(AlbCert)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbCert) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbCertList) DeepCopyInto(out *AlbCertList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AlbCert, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbCertList.
func (in *AlbCertList) DeepCopy() *AlbCertList {
	if in == nil {
		return nil
	}
	out := new(AlbCertList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbCertList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbCertSpec) DeepCopyInto(out *AlbCertSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AlbCertSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbCertSpec.
func (in *AlbCertSpec) DeepCopy() *AlbCertSpec {
	if in == nil {
		return nil
	}
	out := new(AlbCertSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbCertSpecResource) DeepCopyInto(out *AlbCertSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.CertCrn != nil {
		in, out := &in.CertCrn, &out.CertCrn
		*out = new(string)
		**out = **in
	}
	if in.CloudCertInstanceID != nil {
		in, out := &in.CloudCertInstanceID, &out.CloudCertInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.ExpiresOn != nil {
		in, out := &in.ExpiresOn, &out.ExpiresOn
		*out = new(string)
		**out = **in
	}
	if in.IssuerName != nil {
		in, out := &in.IssuerName, &out.IssuerName
		*out = new(string)
		**out = **in
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.Persistence != nil {
		in, out := &in.Persistence, &out.Persistence
		*out = new(bool)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretName != nil {
		in, out := &in.SecretName, &out.SecretName
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbCertSpecResource.
func (in *AlbCertSpecResource) DeepCopy() *AlbCertSpecResource {
	if in == nil {
		return nil
	}
	out := new(AlbCertSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbCertStatus) DeepCopyInto(out *AlbCertStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbCertStatus.
func (in *AlbCertStatus) DeepCopy() *AlbCertStatus {
	if in == nil {
		return nil
	}
	out := new(AlbCertStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbList) DeepCopyInto(out *AlbList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Alb, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbList.
func (in *AlbList) DeepCopy() *AlbList {
	if in == nil {
		return nil
	}
	out := new(AlbList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AlbList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbSpec) DeepCopyInto(out *AlbSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(AlbSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbSpec.
func (in *AlbSpec) DeepCopy() *AlbSpec {
	if in == nil {
		return nil
	}
	out := new(AlbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbSpecResource) DeepCopyInto(out *AlbSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AlbID != nil {
		in, out := &in.AlbID, &out.AlbID
		*out = new(string)
		**out = **in
	}
	if in.AlbType != nil {
		in, out := &in.AlbType, &out.AlbType
		*out = new(string)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.DisableDeployment != nil {
		in, out := &in.DisableDeployment, &out.DisableDeployment
		*out = new(bool)
		**out = **in
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.UserIP != nil {
		in, out := &in.UserIP, &out.UserIP
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbSpecResource.
func (in *AlbSpecResource) DeepCopy() *AlbSpecResource {
	if in == nil {
		return nil
	}
	out := new(AlbSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlbStatus) DeepCopyInto(out *AlbStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlbStatus.
func (in *AlbStatus) DeepCopy() *AlbStatus {
	if in == nil {
		return nil
	}
	out := new(AlbStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyReset) DeepCopyInto(out *ApiKeyReset) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyReset.
func (in *ApiKeyReset) DeepCopy() *ApiKeyReset {
	if in == nil {
		return nil
	}
	out := new(ApiKeyReset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApiKeyReset) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyResetList) DeepCopyInto(out *ApiKeyResetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApiKeyReset, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyResetList.
func (in *ApiKeyResetList) DeepCopy() *ApiKeyResetList {
	if in == nil {
		return nil
	}
	out := new(ApiKeyResetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApiKeyResetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyResetSpec) DeepCopyInto(out *ApiKeyResetSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ApiKeyResetSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyResetSpec.
func (in *ApiKeyResetSpec) DeepCopy() *ApiKeyResetSpec {
	if in == nil {
		return nil
	}
	out := new(ApiKeyResetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyResetSpecResource) DeepCopyInto(out *ApiKeyResetSpecResource) {
	*out = *in
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResetAPIKey != nil {
		in, out := &in.ResetAPIKey, &out.ResetAPIKey
		*out = new(int64)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyResetSpecResource.
func (in *ApiKeyResetSpecResource) DeepCopy() *ApiKeyResetSpecResource {
	if in == nil {
		return nil
	}
	out := new(ApiKeyResetSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApiKeyResetStatus) DeepCopyInto(out *ApiKeyResetStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApiKeyResetStatus.
func (in *ApiKeyResetStatus) DeepCopy() *ApiKeyResetStatus {
	if in == nil {
		return nil
	}
	out := new(ApiKeyResetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindService) DeepCopyInto(out *BindService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindService.
func (in *BindService) DeepCopy() *BindService {
	if in == nil {
		return nil
	}
	out := new(BindService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BindService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindServiceList) DeepCopyInto(out *BindServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BindService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindServiceList.
func (in *BindServiceList) DeepCopy() *BindServiceList {
	if in == nil {
		return nil
	}
	out := new(BindServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BindServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindServiceSpec) DeepCopyInto(out *BindServiceSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(BindServiceSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindServiceSpec.
func (in *BindServiceSpec) DeepCopy() *BindServiceSpec {
	if in == nil {
		return nil
	}
	out := new(BindServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindServiceSpecResource) DeepCopyInto(out *BindServiceSpecResource) {
	*out = *in
	if in.AccountGuid != nil {
		in, out := &in.AccountGuid, &out.AccountGuid
		*out = new(string)
		**out = **in
	}
	if in.ClusterNameID != nil {
		in, out := &in.ClusterNameID, &out.ClusterNameID
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.NamespaceID != nil {
		in, out := &in.NamespaceID, &out.NamespaceID
		*out = new(string)
		**out = **in
	}
	if in.OrgGuid != nil {
		in, out := &in.OrgGuid, &out.OrgGuid
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Role != nil {
		in, out := &in.Role, &out.Role
		*out = new(string)
		**out = **in
	}
	if in.ServiceInstanceID != nil {
		in, out := &in.ServiceInstanceID, &out.ServiceInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceInstanceName != nil {
		in, out := &in.ServiceInstanceName, &out.ServiceInstanceName
		*out = new(string)
		**out = **in
	}
	if in.SpaceGuid != nil {
		in, out := &in.SpaceGuid, &out.SpaceGuid
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindServiceSpecResource.
func (in *BindServiceSpecResource) DeepCopy() *BindServiceSpecResource {
	if in == nil {
		return nil
	}
	out := new(BindServiceSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindServiceStatus) DeepCopyInto(out *BindServiceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindServiceStatus.
func (in *BindServiceStatus) DeepCopy() *BindServiceStatus {
	if in == nil {
		return nil
	}
	out := new(BindServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFeature) DeepCopyInto(out *ClusterFeature) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFeature.
func (in *ClusterFeature) DeepCopy() *ClusterFeature {
	if in == nil {
		return nil
	}
	out := new(ClusterFeature)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterFeature) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFeatureList) DeepCopyInto(out *ClusterFeatureList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterFeature, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFeatureList.
func (in *ClusterFeatureList) DeepCopy() *ClusterFeatureList {
	if in == nil {
		return nil
	}
	out := new(ClusterFeatureList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterFeatureList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFeatureSpec) DeepCopyInto(out *ClusterFeatureSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterFeatureSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFeatureSpec.
func (in *ClusterFeatureSpec) DeepCopy() *ClusterFeatureSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterFeatureSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFeatureSpecResource) DeepCopyInto(out *ClusterFeatureSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceEndpoint != nil {
		in, out := &in.PrivateServiceEndpoint, &out.PrivateServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.PrivateServiceEndpointURL != nil {
		in, out := &in.PrivateServiceEndpointURL, &out.PrivateServiceEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.PublicServiceEndpoint != nil {
		in, out := &in.PublicServiceEndpoint, &out.PublicServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.PublicServiceEndpointURL != nil {
		in, out := &in.PublicServiceEndpointURL, &out.PublicServiceEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.RefreshAPIServers != nil {
		in, out := &in.RefreshAPIServers, &out.RefreshAPIServers
		*out = new(bool)
		**out = **in
	}
	if in.ReloadWorkers != nil {
		in, out := &in.ReloadWorkers, &out.ReloadWorkers
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFeatureSpecResource.
func (in *ClusterFeatureSpecResource) DeepCopy() *ClusterFeatureSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterFeatureSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterFeatureStatus) DeepCopyInto(out *ClusterFeatureStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterFeatureStatus.
func (in *ClusterFeatureStatus) DeepCopy() *ClusterFeatureStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterFeatureStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(ClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecAlbs) DeepCopyInto(out *ClusterSpecAlbs) {
	*out = *in
	if in.AlbIP != nil {
		in, out := &in.AlbIP, &out.AlbIP
		*out = new(string)
		**out = **in
	}
	if in.AlbType != nil {
		in, out := &in.AlbType, &out.AlbType
		*out = new(string)
		**out = **in
	}
	if in.DisableDeployment != nil {
		in, out := &in.DisableDeployment, &out.DisableDeployment
		*out = new(bool)
		**out = **in
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumOfInstances != nil {
		in, out := &in.NumOfInstances, &out.NumOfInstances
		*out = new(string)
		**out = **in
	}
	if in.Resize != nil {
		in, out := &in.Resize, &out.Resize
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecAlbs.
func (in *ClusterSpecAlbs) DeepCopy() *ClusterSpecAlbs {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecAlbs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecKmsConfig) DeepCopyInto(out *ClusterSpecKmsConfig) {
	*out = *in
	if in.CrkID != nil {
		in, out := &in.CrkID, &out.CrkID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecKmsConfig.
func (in *ClusterSpecKmsConfig) DeepCopy() *ClusterSpecKmsConfig {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecKmsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecResource) DeepCopyInto(out *ClusterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountGuid != nil {
		in, out := &in.AccountGuid, &out.AccountGuid
		*out = new(string)
		**out = **in
	}
	if in.Albs != nil {
		in, out := &in.Albs, &out.Albs
		*out = make([]ClusterSpecAlbs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Billing != nil {
		in, out := &in.Billing, &out.Billing
		*out = new(string)
		**out = **in
	}
	if in.Crn != nil {
		in, out := &in.Crn, &out.Crn
		*out = new(string)
		**out = **in
	}
	if in.Datacenter != nil {
		in, out := &in.Datacenter, &out.Datacenter
		*out = new(string)
		**out = **in
	}
	if in.DefaultPoolSize != nil {
		in, out := &in.DefaultPoolSize, &out.DefaultPoolSize
		*out = new(int64)
		**out = **in
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.Entitlement != nil {
		in, out := &in.Entitlement, &out.Entitlement
		*out = new(string)
		**out = **in
	}
	if in.ForceDeleteStorage != nil {
		in, out := &in.ForceDeleteStorage, &out.ForceDeleteStorage
		*out = new(bool)
		**out = **in
	}
	if in.GatewayEnabled != nil {
		in, out := &in.GatewayEnabled, &out.GatewayEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Hardware != nil {
		in, out := &in.Hardware, &out.Hardware
		*out = new(string)
		**out = **in
	}
	if in.IngressHostname != nil {
		in, out := &in.IngressHostname, &out.IngressHostname
		*out = new(string)
		**out = **in
	}
	if in.IngressSecret != nil {
		in, out := &in.IngressSecret, &out.IngressSecret
		*out = new(string)
		**out = **in
	}
	if in.IsTrusted != nil {
		in, out := &in.IsTrusted, &out.IsTrusted
		*out = new(bool)
		**out = **in
	}
	if in.KmsConfig != nil {
		in, out := &in.KmsConfig, &out.KmsConfig
		*out = new(ClusterSpecKmsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeVersion != nil {
		in, out := &in.KubeVersion, &out.KubeVersion
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NoSubnet != nil {
		in, out := &in.NoSubnet, &out.NoSubnet
		*out = new(bool)
		**out = **in
	}
	if in.OrgGuid != nil {
		in, out := &in.OrgGuid, &out.OrgGuid
		*out = new(string)
		**out = **in
	}
	if in.PatchVersion != nil {
		in, out := &in.PatchVersion, &out.PatchVersion
		*out = new(string)
		**out = **in
	}
	if in.PodSubnet != nil {
		in, out := &in.PodSubnet, &out.PodSubnet
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceEndpoint != nil {
		in, out := &in.PrivateServiceEndpoint, &out.PrivateServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.PrivateServiceEndpointURL != nil {
		in, out := &in.PrivateServiceEndpointURL, &out.PrivateServiceEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.PrivateVLANID != nil {
		in, out := &in.PrivateVLANID, &out.PrivateVLANID
		*out = new(string)
		**out = **in
	}
	if in.PublicServiceEndpoint != nil {
		in, out := &in.PublicServiceEndpoint, &out.PublicServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.PublicServiceEndpointURL != nil {
		in, out := &in.PublicServiceEndpointURL, &out.PublicServiceEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.PublicVLANID != nil {
		in, out := &in.PublicVLANID, &out.PublicVLANID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceControllerURL != nil {
		in, out := &in.ResourceControllerURL, &out.ResourceControllerURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceCrn != nil {
		in, out := &in.ResourceCrn, &out.ResourceCrn
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
	if in.ResourceStatus != nil {
		in, out := &in.ResourceStatus, &out.ResourceStatus
		*out = new(string)
		**out = **in
	}
	if in.RetryPatchVersion != nil {
		in, out := &in.RetryPatchVersion, &out.RetryPatchVersion
		*out = new(int64)
		**out = **in
	}
	if in.ServerURL != nil {
		in, out := &in.ServerURL, &out.ServerURL
		*out = new(string)
		**out = **in
	}
	if in.ServiceSubnet != nil {
		in, out := &in.ServiceSubnet, &out.ServiceSubnet
		*out = new(string)
		**out = **in
	}
	if in.SpaceGuid != nil {
		in, out := &in.SpaceGuid, &out.SpaceGuid
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]ClusterSpecTaints, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateAllWorkers != nil {
		in, out := &in.UpdateAllWorkers, &out.UpdateAllWorkers
		*out = new(bool)
		**out = **in
	}
	if in.WaitForWorkerUpdate != nil {
		in, out := &in.WaitForWorkerUpdate, &out.WaitForWorkerUpdate
		*out = new(bool)
		**out = **in
	}
	if in.WaitTill != nil {
		in, out := &in.WaitTill, &out.WaitTill
		*out = new(string)
		**out = **in
	}
	if in.WaitTimeMinutes != nil {
		in, out := &in.WaitTimeMinutes, &out.WaitTimeMinutes
		*out = new(int64)
		**out = **in
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = make([]ClusterSpecWebhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerNum != nil {
		in, out := &in.WorkerNum, &out.WorkerNum
		*out = new(int64)
		**out = **in
	}
	if in.WorkerPools != nil {
		in, out := &in.WorkerPools, &out.WorkerPools
		*out = make([]ClusterSpecWorkerPools, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkersInfo != nil {
		in, out := &in.WorkersInfo, &out.WorkersInfo
		*out = make([]ClusterSpecWorkersInfo, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecResource.
func (in *ClusterSpecResource) DeepCopy() *ClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecTaints) DeepCopyInto(out *ClusterSpecTaints) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecTaints.
func (in *ClusterSpecTaints) DeepCopy() *ClusterSpecTaints {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecTaints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecWebhook) DeepCopyInto(out *ClusterSpecWebhook) {
	*out = *in
	if in.Level != nil {
		in, out := &in.Level, &out.Level
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Url != nil {
		in, out := &in.Url, &out.Url
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecWebhook.
func (in *ClusterSpecWebhook) DeepCopy() *ClusterSpecWebhook {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecWebhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecWorkerPools) DeepCopyInto(out *ClusterSpecWorkerPools) {
	*out = *in
	if in.Hardware != nil {
		in, out := &in.Hardware, &out.Hardware
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SizePerZone != nil {
		in, out := &in.SizePerZone, &out.SizePerZone
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]ClusterSpecWorkerPoolsZones, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecWorkerPools.
func (in *ClusterSpecWorkerPools) DeepCopy() *ClusterSpecWorkerPools {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecWorkerPools)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecWorkerPoolsZones) DeepCopyInto(out *ClusterSpecWorkerPoolsZones) {
	*out = *in
	if in.PrivateVLAN != nil {
		in, out := &in.PrivateVLAN, &out.PrivateVLAN
		*out = new(string)
		**out = **in
	}
	if in.PublicVLAN != nil {
		in, out := &in.PublicVLAN, &out.PublicVLAN
		*out = new(string)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(int64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecWorkerPoolsZones.
func (in *ClusterSpecWorkerPoolsZones) DeepCopy() *ClusterSpecWorkerPoolsZones {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecWorkerPoolsZones)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpecWorkersInfo) DeepCopyInto(out *ClusterSpecWorkersInfo) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PoolName != nil {
		in, out := &in.PoolName, &out.PoolName
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpecWorkersInfo.
func (in *ClusterSpecWorkersInfo) DeepCopy() *ClusterSpecWorkersInfo {
	if in == nil {
		return nil
	}
	out := new(ClusterSpecWorkersInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcAlb) DeepCopyInto(out *VpcAlb) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcAlb.
func (in *VpcAlb) DeepCopy() *VpcAlb {
	if in == nil {
		return nil
	}
	out := new(VpcAlb)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcAlb) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcAlbList) DeepCopyInto(out *VpcAlbList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcAlb, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcAlbList.
func (in *VpcAlbList) DeepCopy() *VpcAlbList {
	if in == nil {
		return nil
	}
	out := new(VpcAlbList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcAlbList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcAlbSpec) DeepCopyInto(out *VpcAlbSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(VpcAlbSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcAlbSpec.
func (in *VpcAlbSpec) DeepCopy() *VpcAlbSpec {
	if in == nil {
		return nil
	}
	out := new(VpcAlbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcAlbSpecResource) DeepCopyInto(out *VpcAlbSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.AlbID != nil {
		in, out := &in.AlbID, &out.AlbID
		*out = new(string)
		**out = **in
	}
	if in.AlbType != nil {
		in, out := &in.AlbType, &out.AlbType
		*out = new(string)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.DisableDeployment != nil {
		in, out := &in.DisableDeployment, &out.DisableDeployment
		*out = new(bool)
		**out = **in
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.LoadBalancerHostname != nil {
		in, out := &in.LoadBalancerHostname, &out.LoadBalancerHostname
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Resize != nil {
		in, out := &in.Resize, &out.Resize
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcAlbSpecResource.
func (in *VpcAlbSpecResource) DeepCopy() *VpcAlbSpecResource {
	if in == nil {
		return nil
	}
	out := new(VpcAlbSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcAlbStatus) DeepCopyInto(out *VpcAlbStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcAlbStatus.
func (in *VpcAlbStatus) DeepCopy() *VpcAlbStatus {
	if in == nil {
		return nil
	}
	out := new(VpcAlbStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcCluster) DeepCopyInto(out *VpcCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcCluster.
func (in *VpcCluster) DeepCopy() *VpcCluster {
	if in == nil {
		return nil
	}
	out := new(VpcCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcClusterList) DeepCopyInto(out *VpcClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcClusterList.
func (in *VpcClusterList) DeepCopy() *VpcClusterList {
	if in == nil {
		return nil
	}
	out := new(VpcClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcClusterSpec) DeepCopyInto(out *VpcClusterSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(VpcClusterSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcClusterSpec.
func (in *VpcClusterSpec) DeepCopy() *VpcClusterSpec {
	if in == nil {
		return nil
	}
	out := new(VpcClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcClusterSpecAlbs) DeepCopyInto(out *VpcClusterSpecAlbs) {
	*out = *in
	if in.AlbType != nil {
		in, out := &in.AlbType, &out.AlbType
		*out = new(string)
		**out = **in
	}
	if in.DisableDeployment != nil {
		in, out := &in.DisableDeployment, &out.DisableDeployment
		*out = new(bool)
		**out = **in
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerHostname != nil {
		in, out := &in.LoadBalancerHostname, &out.LoadBalancerHostname
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Resize != nil {
		in, out := &in.Resize, &out.Resize
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcClusterSpecAlbs.
func (in *VpcClusterSpecAlbs) DeepCopy() *VpcClusterSpecAlbs {
	if in == nil {
		return nil
	}
	out := new(VpcClusterSpecAlbs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcClusterSpecKmsConfig) DeepCopyInto(out *VpcClusterSpecKmsConfig) {
	*out = *in
	if in.CrkID != nil {
		in, out := &in.CrkID, &out.CrkID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcClusterSpecKmsConfig.
func (in *VpcClusterSpecKmsConfig) DeepCopy() *VpcClusterSpecKmsConfig {
	if in == nil {
		return nil
	}
	out := new(VpcClusterSpecKmsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcClusterSpecResource) DeepCopyInto(out *VpcClusterSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Albs != nil {
		in, out := &in.Albs, &out.Albs
		*out = make([]VpcClusterSpecAlbs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CosInstanceCrn != nil {
		in, out := &in.CosInstanceCrn, &out.CosInstanceCrn
		*out = new(string)
		**out = **in
	}
	if in.Crn != nil {
		in, out := &in.Crn, &out.Crn
		*out = new(string)
		**out = **in
	}
	if in.DisablePublicServiceEndpoint != nil {
		in, out := &in.DisablePublicServiceEndpoint, &out.DisablePublicServiceEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.Entitlement != nil {
		in, out := &in.Entitlement, &out.Entitlement
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.ForceDeleteStorage != nil {
		in, out := &in.ForceDeleteStorage, &out.ForceDeleteStorage
		*out = new(bool)
		**out = **in
	}
	if in.IngressHostname != nil {
		in, out := &in.IngressHostname, &out.IngressHostname
		*out = new(string)
		**out = **in
	}
	if in.IngressSecret != nil {
		in, out := &in.IngressSecret, &out.IngressSecret
		*out = new(string)
		**out = **in
	}
	if in.KmsConfig != nil {
		in, out := &in.KmsConfig, &out.KmsConfig
		*out = new(VpcClusterSpecKmsConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeVersion != nil {
		in, out := &in.KubeVersion, &out.KubeVersion
		*out = new(string)
		**out = **in
	}
	if in.MasterStatus != nil {
		in, out := &in.MasterStatus, &out.MasterStatus
		*out = new(string)
		**out = **in
	}
	if in.MasterURL != nil {
		in, out := &in.MasterURL, &out.MasterURL
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PatchVersion != nil {
		in, out := &in.PatchVersion, &out.PatchVersion
		*out = new(string)
		**out = **in
	}
	if in.PodSubnet != nil {
		in, out := &in.PodSubnet, &out.PodSubnet
		*out = new(string)
		**out = **in
	}
	if in.PrivateServiceEndpointURL != nil {
		in, out := &in.PrivateServiceEndpointURL, &out.PrivateServiceEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.PublicServiceEndpointURL != nil {
		in, out := &in.PublicServiceEndpointURL, &out.PublicServiceEndpointURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceControllerURL != nil {
		in, out := &in.ResourceControllerURL, &out.ResourceControllerURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceCrn != nil {
		in, out := &in.ResourceCrn, &out.ResourceCrn
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupName != nil {
		in, out := &in.ResourceGroupName, &out.ResourceGroupName
		*out = new(string)
		**out = **in
	}
	if in.ResourceName != nil {
		in, out := &in.ResourceName, &out.ResourceName
		*out = new(string)
		**out = **in
	}
	if in.ResourceStatus != nil {
		in, out := &in.ResourceStatus, &out.ResourceStatus
		*out = new(string)
		**out = **in
	}
	if in.RetryPatchVersion != nil {
		in, out := &in.RetryPatchVersion, &out.RetryPatchVersion
		*out = new(int64)
		**out = **in
	}
	if in.ServiceSubnet != nil {
		in, out := &in.ServiceSubnet, &out.ServiceSubnet
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]VpcClusterSpecTaints, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UpdateAllWorkers != nil {
		in, out := &in.UpdateAllWorkers, &out.UpdateAllWorkers
		*out = new(bool)
		**out = **in
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	if in.WaitForWorkerUpdate != nil {
		in, out := &in.WaitForWorkerUpdate, &out.WaitForWorkerUpdate
		*out = new(bool)
		**out = **in
	}
	if in.WaitTill != nil {
		in, out := &in.WaitTill, &out.WaitTill
		*out = new(string)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(int64)
		**out = **in
	}
	if in.WorkerLabels != nil {
		in, out := &in.WorkerLabels, &out.WorkerLabels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]VpcClusterSpecZones, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcClusterSpecResource.
func (in *VpcClusterSpecResource) DeepCopy() *VpcClusterSpecResource {
	if in == nil {
		return nil
	}
	out := new(VpcClusterSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcClusterSpecTaints) DeepCopyInto(out *VpcClusterSpecTaints) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcClusterSpecTaints.
func (in *VpcClusterSpecTaints) DeepCopy() *VpcClusterSpecTaints {
	if in == nil {
		return nil
	}
	out := new(VpcClusterSpecTaints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcClusterSpecZones) DeepCopyInto(out *VpcClusterSpecZones) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcClusterSpecZones.
func (in *VpcClusterSpecZones) DeepCopy() *VpcClusterSpecZones {
	if in == nil {
		return nil
	}
	out := new(VpcClusterSpecZones)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcClusterStatus) DeepCopyInto(out *VpcClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcClusterStatus.
func (in *VpcClusterStatus) DeepCopy() *VpcClusterStatus {
	if in == nil {
		return nil
	}
	out := new(VpcClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcWorkerPool) DeepCopyInto(out *VpcWorkerPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcWorkerPool.
func (in *VpcWorkerPool) DeepCopy() *VpcWorkerPool {
	if in == nil {
		return nil
	}
	out := new(VpcWorkerPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcWorkerPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcWorkerPoolList) DeepCopyInto(out *VpcWorkerPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcWorkerPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcWorkerPoolList.
func (in *VpcWorkerPoolList) DeepCopy() *VpcWorkerPoolList {
	if in == nil {
		return nil
	}
	out := new(VpcWorkerPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcWorkerPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcWorkerPoolSpec) DeepCopyInto(out *VpcWorkerPoolSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(VpcWorkerPoolSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcWorkerPoolSpec.
func (in *VpcWorkerPoolSpec) DeepCopy() *VpcWorkerPoolSpec {
	if in == nil {
		return nil
	}
	out := new(VpcWorkerPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcWorkerPoolSpecResource) DeepCopyInto(out *VpcWorkerPoolSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.Entitlement != nil {
		in, out := &in.Entitlement, &out.Entitlement
		*out = new(string)
		**out = **in
	}
	if in.Flavor != nil {
		in, out := &in.Flavor, &out.Flavor
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.ResourceControllerURL != nil {
		in, out := &in.ResourceControllerURL, &out.ResourceControllerURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]VpcWorkerPoolSpecTaints, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpcID != nil {
		in, out := &in.VpcID, &out.VpcID
		*out = new(string)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(int64)
		**out = **in
	}
	if in.WorkerPoolName != nil {
		in, out := &in.WorkerPoolName, &out.WorkerPoolName
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]VpcWorkerPoolSpecZones, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcWorkerPoolSpecResource.
func (in *VpcWorkerPoolSpecResource) DeepCopy() *VpcWorkerPoolSpecResource {
	if in == nil {
		return nil
	}
	out := new(VpcWorkerPoolSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcWorkerPoolSpecTaints) DeepCopyInto(out *VpcWorkerPoolSpecTaints) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcWorkerPoolSpecTaints.
func (in *VpcWorkerPoolSpecTaints) DeepCopy() *VpcWorkerPoolSpecTaints {
	if in == nil {
		return nil
	}
	out := new(VpcWorkerPoolSpecTaints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcWorkerPoolSpecZones) DeepCopyInto(out *VpcWorkerPoolSpecZones) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcWorkerPoolSpecZones.
func (in *VpcWorkerPoolSpecZones) DeepCopy() *VpcWorkerPoolSpecZones {
	if in == nil {
		return nil
	}
	out := new(VpcWorkerPoolSpecZones)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcWorkerPoolStatus) DeepCopyInto(out *VpcWorkerPoolStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcWorkerPoolStatus.
func (in *VpcWorkerPoolStatus) DeepCopy() *VpcWorkerPoolStatus {
	if in == nil {
		return nil
	}
	out := new(VpcWorkerPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPool) DeepCopyInto(out *WorkerPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPool.
func (in *WorkerPool) DeepCopy() *WorkerPool {
	if in == nil {
		return nil
	}
	out := new(WorkerPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkerPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolList) DeepCopyInto(out *WorkerPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkerPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolList.
func (in *WorkerPoolList) DeepCopy() *WorkerPoolList {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkerPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolSpec) DeepCopyInto(out *WorkerPoolSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(WorkerPoolSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolSpec.
func (in *WorkerPoolSpec) DeepCopy() *WorkerPoolSpec {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolSpecResource) DeepCopyInto(out *WorkerPoolSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.DiskEncryption != nil {
		in, out := &in.DiskEncryption, &out.DiskEncryption
		*out = new(bool)
		**out = **in
	}
	if in.Entitlement != nil {
		in, out := &in.Entitlement, &out.Entitlement
		*out = new(string)
		**out = **in
	}
	if in.Hardware != nil {
		in, out := &in.Hardware, &out.Hardware
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.MachineType != nil {
		in, out := &in.MachineType, &out.MachineType
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceControllerURL != nil {
		in, out := &in.ResourceControllerURL, &out.ResourceControllerURL
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.SizePerZone != nil {
		in, out := &in.SizePerZone, &out.SizePerZone
		*out = new(int64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]WorkerPoolSpecTaints, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WorkerPoolName != nil {
		in, out := &in.WorkerPoolName, &out.WorkerPoolName
		*out = new(string)
		**out = **in
	}
	if in.Zones != nil {
		in, out := &in.Zones, &out.Zones
		*out = make([]WorkerPoolSpecZones, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolSpecResource.
func (in *WorkerPoolSpecResource) DeepCopy() *WorkerPoolSpecResource {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolSpecTaints) DeepCopyInto(out *WorkerPoolSpecTaints) {
	*out = *in
	if in.Effect != nil {
		in, out := &in.Effect, &out.Effect
		*out = new(string)
		**out = **in
	}
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolSpecTaints.
func (in *WorkerPoolSpecTaints) DeepCopy() *WorkerPoolSpecTaints {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolSpecTaints)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolSpecZones) DeepCopyInto(out *WorkerPoolSpecZones) {
	*out = *in
	if in.PrivateVLAN != nil {
		in, out := &in.PrivateVLAN, &out.PrivateVLAN
		*out = new(string)
		**out = **in
	}
	if in.PublicVLAN != nil {
		in, out := &in.PublicVLAN, &out.PublicVLAN
		*out = new(string)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(int64)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolSpecZones.
func (in *WorkerPoolSpecZones) DeepCopy() *WorkerPoolSpecZones {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolSpecZones)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolStatus) DeepCopyInto(out *WorkerPoolStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolStatus.
func (in *WorkerPoolStatus) DeepCopy() *WorkerPoolStatus {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolZoneAttachment) DeepCopyInto(out *WorkerPoolZoneAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolZoneAttachment.
func (in *WorkerPoolZoneAttachment) DeepCopy() *WorkerPoolZoneAttachment {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolZoneAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkerPoolZoneAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolZoneAttachmentList) DeepCopyInto(out *WorkerPoolZoneAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkerPoolZoneAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolZoneAttachmentList.
func (in *WorkerPoolZoneAttachmentList) DeepCopy() *WorkerPoolZoneAttachmentList {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolZoneAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkerPoolZoneAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolZoneAttachmentSpec) DeepCopyInto(out *WorkerPoolZoneAttachmentSpec) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(WorkerPoolZoneAttachmentSpecResource)
		(*in).DeepCopyInto(*out)
	}
	in.Resource.DeepCopyInto(&out.Resource)
	out.ProviderRef = in.ProviderRef
	if in.BackendRef != nil {
		in, out := &in.BackendRef, &out.BackendRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolZoneAttachmentSpec.
func (in *WorkerPoolZoneAttachmentSpec) DeepCopy() *WorkerPoolZoneAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolZoneAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolZoneAttachmentSpecResource) DeepCopyInto(out *WorkerPoolZoneAttachmentSpecResource) {
	*out = *in
	if in.Timeouts != nil {
		in, out := &in.Timeouts, &out.Timeouts
		*out = new(apiv1alpha1.ResourceTimeout)
		(*in).DeepCopyInto(*out)
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(string)
		**out = **in
	}
	if in.PrivateVLANID != nil {
		in, out := &in.PrivateVLANID, &out.PrivateVLANID
		*out = new(string)
		**out = **in
	}
	if in.PublicVLANID != nil {
		in, out := &in.PublicVLANID, &out.PublicVLANID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroupID != nil {
		in, out := &in.ResourceGroupID, &out.ResourceGroupID
		*out = new(string)
		**out = **in
	}
	if in.WaitTillAlbs != nil {
		in, out := &in.WaitTillAlbs, &out.WaitTillAlbs
		*out = new(bool)
		**out = **in
	}
	if in.WorkerCount != nil {
		in, out := &in.WorkerCount, &out.WorkerCount
		*out = new(int64)
		**out = **in
	}
	if in.WorkerPool != nil {
		in, out := &in.WorkerPool, &out.WorkerPool
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolZoneAttachmentSpecResource.
func (in *WorkerPoolZoneAttachmentSpecResource) DeepCopy() *WorkerPoolZoneAttachmentSpecResource {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolZoneAttachmentSpecResource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkerPoolZoneAttachmentStatus) DeepCopyInto(out *WorkerPoolZoneAttachmentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]apiv1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkerPoolZoneAttachmentStatus.
func (in *WorkerPoolZoneAttachmentStatus) DeepCopy() *WorkerPoolZoneAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(WorkerPoolZoneAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}
