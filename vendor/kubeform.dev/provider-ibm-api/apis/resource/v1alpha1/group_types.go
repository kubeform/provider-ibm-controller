/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by Kubeform. DO NOT EDIT.

package v1alpha1

import (
	base "kubeform.dev/apimachinery/api/v1alpha1"

	core "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	kmapi "kmodules.xyz/client-go/api/v1"
	"sigs.k8s.io/cli-utils/pkg/kstatus/status"
)

// +genclient
// +k8s:openapi-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Phase",type=string,JSONPath=`.status.phase`

type Group struct {
	metav1.TypeMeta   `json:",inline,omitempty"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GroupSpec   `json:"spec,omitempty"`
	Status            GroupStatus `json:"status,omitempty"`
}

type GroupSpec struct {
	State *GroupSpecResource `json:"state,omitempty" tf:"-"`

	Resource GroupSpecResource `json:"resource" tf:"resource"`

	UpdatePolicy base.UpdatePolicy `json:"updatePolicy,omitempty" tf:"-"`

	TerminationPolicy base.TerminationPolicy `json:"terminationPolicy,omitempty" tf:"-"`

	ProviderRef core.LocalObjectReference `json:"providerRef" tf:"-"`

	BackendRef *core.LocalObjectReference `json:"backendRef,omitempty" tf:"-"`
}

type GroupSpecResource struct {
	ID string `json:"id,omitempty" tf:"id,omitempty"`

	// The date when the resource group was initially created.
	// +optional
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at"`
	// The full CRN associated with the resource group
	// +optional
	Crn *string `json:"crn,omitempty" tf:"crn"`
	// Specifies whether its default resource group or not
	// +optional
	Default *bool `json:"default,omitempty" tf:"default"`
	// The name of the resource group
	Name *string `json:"name" tf:"name"`
	// The URL to access the payment methods details that associated with the resource group.
	// +optional
	PaymentMethodsURL *string `json:"paymentMethodsURL,omitempty" tf:"payment_methods_url"`
	// An alpha-numeric value identifying the quota ID associated with the resource group.
	// +optional
	QuotaID *string `json:"quotaID,omitempty" tf:"quota_id"`
	// The URL to access the quota details that associated with the resource group.
	// +optional
	QuotaURL *string `json:"quotaURL,omitempty" tf:"quota_url"`
	// An array of the resources that linked to the resource group
	// +optional
	ResourceLinkages []string `json:"resourceLinkages,omitempty" tf:"resource_linkages"`
	// State of the resource group
	// +optional
	State *string `json:"state,omitempty" tf:"state"`
	// +optional
	Tags []string `json:"tags,omitempty" tf:"tags"`
	// The URL to access the team details that associated with the resource group.
	// +optional
	TeamsURL *string `json:"teamsURL,omitempty" tf:"teams_url"`
	// The date when the resource group was last updated.
	// +optional
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at"`
}

type GroupStatus struct {
	// Resource generation, which is updated on mutation by the API Server.
	// +optional
	ObservedGeneration int64 `json:"observedGeneration,omitempty"`
	// +optional
	Phase status.Status `json:"phase,omitempty"`
	// +optional
	Conditions []kmapi.Condition `json:"conditions,omitempty"`
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:object:root=true

// GroupList is a list of Groups
type GroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	// Items is a list of Group CRD objects
	Items []Group `json:"items,omitempty"`
}
